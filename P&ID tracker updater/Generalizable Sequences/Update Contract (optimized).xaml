<Activity mc:Ignorable="sap sap2010" x:Class="Navigate_Contract" this:Navigate_Contract.contract_url="https://convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" this:Navigate_Contract.PnID_excel_file="C:\Users\CHEWJ1\Downloads\TWRP Overall P&amp;ID Tracker (4).xlsx" this:Navigate_Contract.ContractName="C4B" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="contract_url" Type="InArgument(x:String)" />
    <x:Property Name="PnID_excel_file" Type="InArgument(x:String)" />
    <x:Property Name="ContractName" Type="InArgument(x:String)" />
    <x:Property Name="UniqueSRCnumbers_arg" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="TableName_arg" Type="OutArgument(x:String)" />
    <x:Property Name="ColumnIndicesDict" Type="OutArgument(scg:Dictionary(x:String, x:Int32))" />
    <x:Property Name="set_SheetNo" Type="OutArgument(scg:Dictionary(x:String, scg:List(x:String)))" />
    <x:Property Name="AutomationProgressInfo" Type="OutArgument(x:String)" />
    <x:Property Name="firstRowIndex" Type="OutArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Navigate_Contract_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Internal</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Workflow.Runtime</x:String>
      <x:String>System.Activities.Tracking</x:String>
      <x:String>System.Activities.Statements.Tracking</x:String>
      <x:String>System.Activities.Runtime</x:String>
      <x:String>System.Activities.Runtime.DurableInstancing</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.ParallelTracking</x:String>
      <x:String>System.Activities.Hosting</x:String>
      <x:String>System.Activities.Persistence</x:String>
      <x:String>System.Activities.DurableInstancing</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Security.Authentication.ExtendedProtection</x:String>
      <x:String>System.Timers</x:String>
      <x:String>System.ComponentModel.Design</x:String>
      <x:String>System.Xml.Schema</x:String>
      <x:String>System.Xml.Xsl</x:String>
      <x:String>System.Xml.Xsl.Runtime</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>Microsoft</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Net.Security</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Validation</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.Features</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Navigate_Contract" sap:VirtualizedContainerService.HintSize="1473.2,18332" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="LargestRevNumber" />
      <Variable x:TypeArguments="x:String" Name="workflow_closed_date" />
      <Variable x:TypeArguments="sd:DataTable" Name="Contract_Table" />
      <Variable x:TypeArguments="x:String" Name="Contract_Sheet" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:Int32))" Name="SrcRowNumbers" />
      <Variable x:TypeArguments="x:Object" Name="SrcNumber" />
      <Variable x:TypeArguments="x:String" Name="Col_letter_SRC" />
      <Variable x:TypeArguments="x:String" Name="Col_letter_Revision" />
      <Variable x:TypeArguments="x:String" Name="Col_letter_Status" />
      <Variable x:TypeArguments="x:String" Name="Col_letter_WorkflowClosed" />
      <Variable x:TypeArguments="x:String" Name="lastColumn_letter" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="firstRowNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Name="Src_MRU_revision" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="UpdatedSRCNumbers" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Col_idx_SRC" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Col_idx_Revision" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Col_idx_Status" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Col_idx_WorkflowClosed" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Need to Extract:&#xA;- Table Number&#xA;- Dictionary of SRC numbers to the relevant rows&#xA;- Dictionary of SRC numbers to the latest revision&#xA;- Hashset of relevant Sheet Numbers&#xA;&#xA;- first row number&#xA;- respective column letters&#xA;-respective column indices" DisplayName="Extract required info from Excel" sap:VirtualizedContainerService.HintSize="1148,1917.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="message" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;Dim excelApp As Microsoft.Office.Interop.Excel.Application = New Microsoft.Office.Interop.Excel.Application&#xA;Dim workbook As Microsoft.Office.Interop.Excel.Workbook = excelApp.Workbooks.Open(filePath)&#xA;Dim worksheet As Microsoft.Office.Interop.Excel.Worksheet = CType(workbook.Sheets(sheetName), Microsoft.Office.Interop.Excel.Worksheet)&#xA;&#xA;&#xA;'find table name'&#xA;Dim table = worksheet.ListObjects(1)&#xA;tableName = table.Name&#xA;headerRowIndex = table.HeaderRowRange.Row +1&#xA;&#xA;srcDictionary = New Dictionary(Of String, List(Of Integer))&#xA;Src_MRU_revision = New Dictionary(Of String, List(Of String))&#xA;set_sheetno = New Dictionary(Of String, List(Of String))&#xA;&#xA;' Create dictionary&#xA;&#xA;&#xA;Dim dataRange As Microsoft.Office.Interop.Excel.Range = table.DataBodyRange&#xA;&#xA;' Find the column index for &quot;SRC No. in Prolog&quot;&#xA;srcColumnIndex = -1&#xA;srcRevIndex = -1&#xA;srcStatusIndex  = -1&#xA;srcWorkflowClosedIndex = -1&#xA;dim srcSheetNumberIndex as Integer = 2 'it will always be second column&#xA;&#xA;For Each col As Microsoft.Office.Interop.Excel.ListColumn In table.ListColumns&#xA;    If col.Name.ToLower().Contains(&quot;src&quot;) Then&#xA;        srcColumnIndex = col.Index&#xA;&#x9;End If&#xA;&#x9; If col.Name.ToLower().Contains(&quot;revision&quot;) Then&#xA;        srcRevIndex = col.Index&#xA;    End If&#xA;&#x9;If col.Name.ToLower().Contains(&quot;status&quot;) Then&#xA;        srcStatusIndex = col.Index&#xA;    End If&#xA;&#x9;If col.Name.ToLower().Contains(&quot;workflow closed&quot;) Then&#xA;        srcWorkflowClosedIndex = col.Index&#xA;    End If&#xA;&#xA;&#x9;If srcColumnIndex &lt;&gt; -1 AndAlso srcRevIndex &lt;&gt; -1 AndAlso srcStatusIndex &lt;&gt; -1  AndAlso  srcWorkflowClosedIndex &lt;&gt; -1 Then&#xA;&#x9;&#x9;Exit For&#xA;&#x9;End If&#xA;Next&#xA;&#xA;&#xA;If srcColumnIndex = -1 Then&#xA;    Throw New Exception(&quot;Column 'SRC No. in Prolog' not found. Please check the Excel table headers.&quot;)&#xA;End If&#xA;&#xA;&#xA;Col_letter_SRC = Convert.ToChar(64+srcColumnIndex) 'RMB THAT IT IS ONE BASED INDEXING FOR MICROSOFT OFFICE INTEROP&#xA;Col_letter_Revision = Convert.ToChar(64+srcRevIndex)&#xA;Col_letter_Status = Convert.ToChar(64+srcStatusIndex)&#xA;Col_letter_WorkflowClosed = Convert.ToChar(64+srcWorkflowClosedIndex)&#xA;&#xA;&#xA;&#xA;' Update dictionary&#xA;If dataRange Is Nothing:&#xA;&#x9;Return&#xA;End If&#xA;&#xA;Dim rowCount As Integer = dataRange.Rows.Count&#xA;&#xA;&#xA;&#xA;For i As Integer = 1 To rowCount&#xA;&#x9;Try&#xA;&#x9;'returns a space if it is empty&#xA;    Dim cell As Microsoft.Office.Interop.Excel.Range = CType(dataRange.Cells(i, srcColumnIndex), Microsoft.Office.Interop.Excel.Range)&#xA;    Dim srcValue As String = If(cell.Value IsNot Nothing AndAlso Not String.Equals(cell.Value.toString, &quot;&quot;), cell.Value.ToString(), &quot; &quot;)&#xA;&#x9;&#xA;&#x9;Dim cellRev As Microsoft.Office.Interop.Excel.Range = CType(dataRange.Cells(i, srcRevIndex), Microsoft.Office.Interop.Excel.Range)&#xA;&#x9;Dim Rev As String = If(cellRev.Value IsNot Nothing AndAlso Not String.Equals(cellRev.Value.toString, &quot;&quot;), cellRev.Value.ToString().trim(), &quot; &quot;)&#xA;&#x9;Dim cellStatus As Microsoft.Office.Interop.Excel.Range = CType(dataRange.Cells(i, srcStatusIndex), Microsoft.Office.Interop.Excel.Range)&#xA;&#x9;Dim Status As String = If(cellStatus.Value IsNot Nothing AndAlso Not String.Equals(cellStatus.Value.toString, &quot;&quot;), cellStatus.Value.ToString().trim(), &quot; &quot;) &#xA;&#x9;Dim cell_sheetno As Microsoft.Office.Interop.Excel.Range = CType(dataRange.Cells(i, srcSheetNumberIndex), Microsoft.Office.Interop.Excel.Range)&#xA;&#x9;Dim sheetno As String = If(cell_sheetno.Value IsNot Nothing AndAlso Not String.Equals(cell_sheetno.Value.toString, &quot;&quot;), cell_sheetno.Value.ToString().trim(), &quot; &quot;) &#xA;&#x9;&#xA;&#x9;&#xA;&#x9;'check if number is on prolog&#xA;&#x9;Dim cellCheckOnProlog As Microsoft.Office.Interop.Excel.Range = CType(dataRange.Cells(i, srcColumnIndex+6), Microsoft.Office.Interop.Excel.Range)&#xA;&#x9;Dim cellOnPrologValue As String = If(cellCheckOnProlog.Value IsNot Nothing AndAlso Not String.Equals(cellCheckOnProlog.Value.toString, &quot;&quot;), cellCheckOnProlog.Value.ToString(), &quot; &quot;)&#xA;&#x9;&#xA;&#xA;&#x9;Dim dontcheckcell As Boolean = String.IsNullOrEmpty(srcValue) Or String.Equals(srcValue, &quot; &quot;) Or cellOnPrologValue.toLower.Contains(&quot;not found on prolog&quot;)&#xA;    If Not dontcheckcell Then&#xA;&#x9;&#x9;&#xA;        If Not srcDictionary.ContainsKey(srcValue) Then&#xA;            srcDictionary(srcValue) = New List(Of Integer)&#x9;&#xA;        End If&#xA;        srcDictionary(srcValue).Add(i)&#xA;&#xA;&#x9;&#x9;If Not set_sheetno.ContainsKey(srcValue) Then&#xA;            set_sheetno(srcValue) = New List(Of String)&#x9;&#xA;        End If&#xA;        set_sheetno(srcValue).Add(sheetno)&#xA;&#xA;&#xA;&#x9;&#x9;If Not Src_MRU_revision.ContainsKey(srcValue) Then&#xA;&#x9;            Src_MRU_revision(srcValue) = New List(Of String) ({Rev, Status})&#xA;&#x9;&#x9;ElseIf String.Equals(Src_MRU_revision(srcValue)(0), &quot; &quot;) Then&#xA;&#x9;&#x9;&#x9;'skip other elseif statements if there is a rev that is empty. to ensure that it will be filled up &#xA;&#x9;&#x9;ElseIf (String.IsNullOrEmpty(Rev) OrElse String.Equals(Rev, &quot; &quot;)) Then&#xA;&#x9;&#x9;&#x9;Src_MRU_revision(srcValue) = New List(Of String) ({Rev, Status}) ' if a submittal revision number is empty, also unwrite it&#xA;&#x9;&#x9;ElseIf Integer.Parse(Rev) &lt; Integer.Parse(Src_MRU_revision(srcValue)(0)) Then 'new revision is smaller than old revision, or old revision empty&#xA;&#x9;&#x9;&#x9;Src_MRU_revision(srcValue) = New List(Of String) ({Rev, Status}) 'always add the lowest revision number if two submittals with same src have different rev number. &#xA;&#x9;    End If&#xA;&#x9;&#xA;&#x9;&#x9;&#xA;    End If&#xA;Catch ex As Exception&#xA;&#x9;MsgBox(&quot;problematic row is &quot; + i.ToString + &quot; with error&quot; + ex.Message )&#xA;End Try&#xA;Next&#xA;&#xA;&#xA;workbook.Close(True)&#xA;excelApp.Quit()&#xA;&#xA;System.Runtime.InteropServices.Marshal.ReleaseComObject(worksheet)&#xA;System.Runtime.InteropServices.Marshal.ReleaseComObject(workbook)&#xA;System.Runtime.InteropServices.Marshal.ReleaseComObject(excelApp)&#xA;" DisplayName="Find Table in Excel associated with Contract" sap:VirtualizedContainerService.HintSize="537.6,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="filePath">[PnID_excel_file]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="sheetName">[ContractName]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="TableName">[TableName_arg]</OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:Int32))" x:Key="srcDictionary">[SrcRowNumbers]</OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="Src_MRU_revision">[Src_MRU_revision]</OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="headerRowIndex">[firstRowNumber]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="Col_letter_SRC">[Col_letter_SRC]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="Col_letter_Revision">[Col_letter_Revision]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="Col_letter_Status">[Col_letter_Status]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="Col_letter_WorkflowClosed">[Col_letter_WorkflowClosed]</OutArgument>
          <InOutArgument x:TypeArguments="x:Int32" x:Key="srcColumnIndex">[Col_idx_SRC]</InOutArgument>
          <InOutArgument x:TypeArguments="x:Int32" x:Key="srcRevIndex">[Col_idx_Revision]</InOutArgument>
          <InOutArgument x:TypeArguments="x:Int32" x:Key="srcStatusIndex">[Col_idx_Status]</InOutArgument>
          <InOutArgument x:TypeArguments="x:Int32" x:Key="srcWorkflowClosedIndex">[Col_idx_WorkflowClosed]</InOutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="set_sheetno">[set_SheetNo]</OutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <Assign sap:VirtualizedContainerService.HintSize="537.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_112">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[firstRowIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[firstRowNumber]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Extract the unique SRC numbers from the 'prolog' column." sap:VirtualizedContainerService.HintSize="537.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_51">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[UniqueSrcNumbers_arg]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[SrcRowNumbers.Keys.ToList()]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="537.6,1245.6" sap2010:WorkflowViewState.IdRef="CommentOut_50">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="502.4,1104" sap2010:WorkflowViewState.IdRef="Sequence_175">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:List(x:String))" CurrentIndex="{x:Null}" DisplayName="Iterate through the key-value pairs of the dictionary." sap:VirtualizedContainerService.HintSize="468.8,408.8" sap2010:WorkflowViewState.IdRef="ForEach`1_22" Values="[set_SheetNo]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:List(x:String))">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:List(x:String))" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_226">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="items" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Build a string containing the key-value pairs." sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_99">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[items]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.join(",", currentItem.Value)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Build a string containing the key-value pairs." sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_100">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[message]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[message &amp; "Key: " &amp; currentItem.Key &amp; ", Value: " &amp; items &amp; Environment.NewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Display the string in a message box." sap:VirtualizedContainerService.HintSize="468.8,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_29" Text="[message]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MessageBox>
            <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:List(x:String))" CurrentIndex="{x:Null}" DisplayName="Iterate through the key-value pairs of the dictionary." sap:VirtualizedContainerService.HintSize="468.8,408.8" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[Src_MRU_revision]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:List(x:String))">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:List(x:String))" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_166">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="rev_status" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Build a string containing the key-value pairs." sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_75">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[rev_status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.join(",", currentItem.Value)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Build a string containing the key-value pairs." sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_74">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[message]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[message &amp; "Key: " &amp; currentItem.Key &amp; ", Value: " &amp; rev_status &amp; Environment.NewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Display the string in a message box." sap:VirtualizedContainerService.HintSize="468.8,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_22" Text="[message]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MessageBox>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="this is for use in later sequences down the pipeline" DisplayName="Add to column indices dict" sap:VirtualizedContainerService.HintSize="1148,682.4" sap2010:WorkflowViewState.IdRef="Sequence_176">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_78">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)">[ColumnIndicesDict]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)">[New Dictionary(of String, Integer)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_79">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[ColumnIndicesDict("SRC")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Col_idx_SRC]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_80">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[ColumnIndicesDict("Revision")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Col_idx_Revision]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_81">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[ColumnIndicesDict("Workflow Closed")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Col_idx_WorkflowClosed]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_82">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[ColumnIndicesDict("Status")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Col_idx_Status]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Assign DisplayName="Keep Track of updated SRC Numbers" sap:VirtualizedContainerService.HintSize="1148,113.6" sap2010:WorkflowViewState.IdRef="Assign_77">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[UpdatedSRCNumbers]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1148,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_49">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="686.4,2011.2" sap2010:WorkflowViewState.IdRef="Sequence_174">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Get table reference, get column names" DisplayName="Extract title data from table" FileConflictResolution="PromptUser" sap:VirtualizedContainerService.HintSize="652.8,1951.2" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" LaunchMethod="Application" ProcessMode="ReuseIfExists">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="619.2,1811.2" sap2010:WorkflowViewState.IdRef="Sequence_65">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="585.6,1751.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" KeepExcelFileOpen="True" ReadOnly="True" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[PnID_excel_file]">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="PnIDtracker" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Find Distinct SRC Numbers" sap:VirtualizedContainerService.HintSize="552,1458.4" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="518.4,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[PnIDtracker.Table(TableName_arg)]" SaveTo="[Contract_Table]" />
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="518.4,275.2" sap2010:WorkflowViewState.IdRef="CommentOut_24">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_113">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Extract the unique SRC numbers from the 'prolog' column." sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[UniqueSRCnumbers_arg]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[Contract_Table.AsEnumerable().[Select](Function(r) r.Field(Of String)("SRC No. on Prolog")).Distinct().ToList()]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <Sequence DisplayName="Find out Column Letters for relevant rows, and first row number" sap:VirtualizedContainerService.HintSize="518.4,921.6" sap2010:WorkflowViewState.IdRef="Sequence_115">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="lastRowNumber" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484.8,279.2" sap2010:WorkflowViewState.IdRef="CommentOut_34">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,168.8" sap2010:WorkflowViewState.IdRef="Sequence_151">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_20" Text="[firstRowNumber.ToString]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Assign DisplayName="Find column letter for SRC " sap:VirtualizedContainerService.HintSize="484.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_54">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Col_letter_SRC]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Chr(65+Contract_Table.Columns.IndexOf("SRC No. on Prolog"))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Find column letter for SRC " sap:VirtualizedContainerService.HintSize="484.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_55">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Col_letter_Revision]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Chr(65+Contract_Table.Columns.IndexOf("Revision on Prolog"))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Find column letter for SRC " sap:VirtualizedContainerService.HintSize="484.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_56">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Col_letter_Status]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Chr(65+Contract_Table.Columns.IndexOf("Status"))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Find column letter for SRC " sap:VirtualizedContainerService.HintSize="484.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_57">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Col_letter_WorkflowClosed]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Chr(65+Contract_Table.Columns.IndexOf("Workflow Closed"))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Get the last column index in Excel." sap:VirtualizedContainerService.HintSize="484.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_62">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[lastColumn_letter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Chr(65+ Contract_Table.Columns.Count - 1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ueab:ExcelProcessScopeX>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <uix:NApplicationCard sap2010:Annotation.AnnotationText="Filter out P&amp;ID documents only" AttachMode="ByInstance" CloseMode="Never" DisplayName="Enter P&amp;ID into Filter" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="1148,677.6" sap2010:WorkflowViewState.IdRef="NApplicationCard_10" InteractionMode="DebuggerApi" ScopeGuid="75fecf98-3b3a-4046-8ff9-5197774a3f45" Version="V2">
      <uix:NApplicationCard.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,397.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="Submittals_loaded" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="416,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_60">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,276.8" sap2010:WorkflowViewState.IdRef="Sequence_247">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'IMG'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,216.8" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="75fecf98-3b3a-4046-8ff9-5197774a3f45" Version="V4">
                    <uix:NClick.Target>
                      <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" DesignTimeRectangle="1714, 203, 25, 39" ElementType="Icon" FullSelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' /&gt;&lt;webctrl aaname='Toggle the filter bar' class='ToolBarImage' parentid='tlbToolbar' tag='IMG' /&gt;" Guid="c87b72a4-0763-44df-b9a5-52c87173e298" InformativeScreenshot="fb8b4095a904ee37cd5e0f203c3fe02e.png" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Prolog Converge' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                    </uix:NClick.Target>
                    <uix:NClick.VerifyOptions>
                      <uix:VerifyExecutionOptions DisplayName="Element 'Subject'" Mode="Appears">
                        <uix:VerifyExecutionOptions.Retry>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </uix:VerifyExecutionOptions.Retry>
                        <uix:VerifyExecutionOptions.Target>
                          <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" ContentHash="_6OWluYngE-IyzLaI5izLA" DesignTimeRectangle="312, 437, 457, 30" FuzzySelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl parentid='dvCH_lstList_SubmittalPackages' tag='TABLE' matching:parentid='fuzzy' fuzzylevel:parentid='0.0' /&gt;&lt;webctrl class='WEI6J7 WEI688  WGGIJH' aaname='' tag='TD' type='FilterColumn' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' /&gt;" Guid="48f8087b-6a56-4b70-a079-ddc4dbaee323" InformativeScreenshot="ab63ecfa765f446c8bc655f6071632fd.png" Reference="2cLmJu5YmECa74LfIK_pQw/frTjvB2RyE6c5gMAjkjAug" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Prolog Converge' /&gt;" SearchSteps="FuzzySelector" Version="V6" Visibility="Interactive" WaitForReadyArgument="None">
                            <uix:TargetAnchorable.Anchors>
                              <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                <uix:Target CVScreenId="8aaa6bf2-5490-47fa-b759-516fb1403db5" CvElementArea="743, 437, 25, 27" CvType="Icon" DesignTimeRectangle="745, 441, 20, 21" ElementType="Icon" FullSelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' /&gt;&lt;webctrl parentid='dvCH_lstList_SubmittalPackages' tag='TABLE' /&gt;&lt;webctrl tableCol='4' tableRow='2' tag='IMG' /&gt;" Guid="a0cc5d75-8995-478b-8d56-f6367bb36f4b" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAABgAAAAZCAYAAAArK+5dAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAJKSURBVEhL7dRbSFNxHMBxnyJCK5CgAiOIMiiKeqmHqF566CmyQCIigh4in8qysIKRkZcijG4+6DShEWjebZOZt3mmc7Ubu6UyhTBvWO1sZ2cnB9/Ygz7o3Ca5l+jh83I4//M9//8ffmmjo6OkUtrSB2vtHws4hn2YhsdXbcA7ht7iYtDhjh+oc0+isourVmCa4egbPfcaDfEDta4Z7lhlXtjCVDoVarwKtV8VqjwKr5wKZdYwqi8yd80yN8wh8oZCXDRKnOyYZdPjNq5puuIH6t2TPLUHaHAoGLzz2HwRbGMRhJEI7a55qi0KT0xhCo0yeYLEJYPECe0Pst752PVMl3gH0Tvo8ExQZAuicf6m2xWhyTrP288K5aYwD/plrveGyO2SOKUPcEgrsr3Gw9bSdp7rzYnvIMo2MkadZwq1M0CFTaHCpFAshLndJ3OlWyKnM8Bxncie1p9sqXJyRD1AYWM/QoyPxwws0LineGgN8mhQJt8gc7lL4rQ+yDGdn+zmWTZrxtlZ3snNup5la5MK2Id9tLi/U2CRuCqEOPMpyOGPIlmtfjKqvaQXNVOiNWG0x/7zhIEoy8g4793T3LeInOsLcLB9jky1i/2VRm7V99JjdS1bs1TcwILXzjkuGEUOtE2xsayDs5W6Ze+sJOlAjiCyrWma9SUpCpwX/OxonGBDiS41gVzhF3ubv5FRqk1RwOgnu2WS9NIUHFG+zsE+9RCZLwXWqRrWPhAdYruLPyyKNdRWklQgOga0ZseilcZCLEkF/sb/QEJ/ADfsD0oQ594wAAAAAElFTkSuQmCC" SearchSteps="Selector, CV" />
                              </scg:List>
                            </uix:TargetAnchorable.Anchors>
                          </uix:TargetAnchorable>
                        </uix:VerifyExecutionOptions.Target>
                        <uix:VerifyExecutionOptions.Timeout>
                          <InArgument x:TypeArguments="x:Double" />
                        </uix:VerifyExecutionOptions.Timeout>
                      </uix:VerifyExecutionOptions>
                    </uix:NClick.VerifyOptions>
                  </uix:NClick>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" ClipboardMode="Never" DelayBetweenKeys="0.1" DisplayName="Type Into 'TD'" EmptyFieldMode="SingleLine" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,279.2" sap2010:WorkflowViewState.IdRef="NTypeInto_1" ScopeIdentifier="75fecf98-3b3a-4046-8ff9-5197774a3f45" Text="P&amp;ID" Version="V4">
              <uix:NTypeInto.Target>
                <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" ContentHash="DTX2ChswNkak8F8hKMOd6Q" DesignTimeRectangle="312, 437, 457, 30" FuzzySelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl parentid='dvCH_lstList_SubmittalPackages' tag='TABLE' matching:parentid='fuzzy' fuzzylevel:parentid='0.0' /&gt;&lt;webctrl class='WEI6J7 WEI688  WGGIJH' aaname='' tag='TD' type='FilterColumn' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' /&gt;" Guid="0d0f6df6-0955-4e23-945d-06ac23dfbef9" InformativeScreenshot="bd94ffa701b7cf3791aabaccd0e9a52b.png" Reference="2cLmJu5YmECa74LfIK_pQw/7GmkUy-4YUKhzzWSPjuLkg" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Prolog Converge' /&gt;" SearchSteps="FuzzySelector" Version="V6" Visibility="Interactive" WaitForReadyArgument="None">
                  <uix:TargetAnchorable.Anchors>
                    <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                      <uix:Target CVScreenId="b81f384f-3940-4a47-941f-30a06dbc3cd9" CvTextArea="310, 399, 79, 22" CvTextArgument="Subject" CvType="Text" DesignTimeRectangle="313, 397, 76, 24" FuzzySelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl parentid='dvCH_lstList_SubmittalPackages' tag='TABLE' matching:parentid='fuzzy' fuzzylevel:parentid='0.0' /&gt;&lt;webctrl type='' class='' tag='NOBR' aaname='Subject' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' check:innerText='Subject' /&gt;" Guid="8187032f-2555-4348-9bfd-abc526ab3214" SearchSteps="FuzzySelector, CV" />
                    </scg:List>
                  </uix:TargetAnchorable.Anchors>
                </uix:TargetAnchorable>
              </uix:NTypeInto.Target>
              <uix:NTypeInto.VerifyOptions>
                <uix:VerifyExecutionTypeIntoOptions DisplayName="{x:Null}" Mode="Appears">
                  <uix:VerifyExecutionTypeIntoOptions.Retry>
                    <InArgument x:TypeArguments="x:Boolean" />
                  </uix:VerifyExecutionTypeIntoOptions.Retry>
                  <uix:VerifyExecutionTypeIntoOptions.Timeout>
                    <InArgument x:TypeArguments="x:Double" />
                  </uix:VerifyExecutionTypeIntoOptions.Timeout>
                </uix:VerifyExecutionTypeIntoOptions>
              </uix:NTypeInto.VerifyOptions>
            </uix:NTypeInto>
          </Sequence>
        </ActivityAction>
      </uix:NApplicationCard.Body>
      <uix:NApplicationCard.TargetApp>
        <uix:TargetApp Area="-1928, -817, 1936, 1048" BrowserType="Edge" ContentHash="Uw-ytocpGEexXUTpmVgSPQ" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAABASSURBVGhDvdl5VFPnugZwrApCCAky2HvvucvTtW7PWq1MMiNxrsocwgyKOM+tKEiZQZBJZHYWx9bqac/R1mWtQ4GdOQRCAiSBhIAUUZx6aWtrT6uX5669EwajQNvT9l3r/Xfn+X15v2/vnZiY/A7lTNxPdCLuEU7EvUFH7lfPHLi34cDtgQNXBwduFxx4GjjyO+AoUMFR0D7oLFLoXMSyy64SKcv4Wn9auRGDia7EI50LcX/IhRiAE9EPR6IPjtxeQ/huzOF2YQ5PCwdeBxz4ajI8HAVtcBYp4CKWYa5ECnep+JlHE1/uLav/czDuxLeJbsTgoBvxv3AlHmEu8QAkwJnohxMF6DMCaDCHAqjgwNcDHAWteoC4mQTAo0kAn5Z6sBTXBxe2XU00/szfpbyIH1iexJMBD+I7uBODcCO+pgAj4bl9cOJ+BSdqfLqp0dEDOvXNV44BKOAsaqEAro0SeMsIeMtIwA0sar+CJcpLA8s7Lv5+34gX8UOtJ/FkiAzvQXwLd+IbDH8DLtx7cOGSAH14x+G552rhwNVgDpcEqKjWA1rhKJDDSdgCF7EUro0ieDTxKMCC1qsUYLn6Ivw7PxwK1J6pNc7yq8ubeCr3In6AJ/EE+tUnw+tX35X7gAI4GwCO3O4xADJ8B+bw1FT4t3lKzOG3w4FPAlrgJJQZABJ4NdfDR/Yl5iuukauPFR0XEdR1CkFdJxHac1RnnOkXlzfxo86LeIpRALn6g3AnAdyHcOXehwv3Lpy5d+DE7aEA+tHppMK/zSWDD7cSb/PaqHYQyCmEi7gR7lIBPJu4FIAlJwH/xDL1RQRqTyNEdxxht6sR1Vf+JK6/cLZxvgnLh/iXzof4EaMAcny+ocK7UeEfjADI0XGiVp9c+eG5Hw7ePqZfBDgJm+AqEcFDOgz4wgC4gADNMKAG0X0HENdf9NQ447jlQ/wkJ8N7jwC+fwXgPuZy78KF2rzDs6/Rjw6vw7DiZOjWkeCjrR+juWIJ3Bv58KQANzFfcRWL2v4J/84zCNKeAFt3GJG9ZYjpK0b83VysuZ82+TjNI36qnUf8BD2ADE/2E3gS38KDGp/HIwBXav574cTrgSNPf8Miz3z9ph0OP9zGABmchY1wk5CAOvjIboAlv4p3lBewQn3WADiEiNvliO0rQvzdHKx9kIaNj3ZdNs48UvOIn1nziJ+H5hH/ogA+xFN4E0/gRXwHT+IbPYBLAsjxIU+fO2MAOgowh9ysVOuDjtfUHhBJMFcsogDzZJ9Tq68HnKHCh98+gNi+fMT2FSD+XhbWP0jGpkfvDW39euurj1hf4tkAufovAr43AAbhcOUO/uecEm/UtuCNky1445QMb5yU4s2/K/DW9c4xgPYJAXP4rdT8u4hEcJPw4N18HSz5FSxs/QeWtF2Ef0ctgrUHwekuR2RvMWL79iLh3vvY+PBdbH28Edu/XtdnnJ0Mn+hL/IxRwFOq53zSj/8sagDzvQ9gtf0DWO28CObuj2G955K+kz6B9e4LsH7vHGx3ncV/19zCm5+2vBR6bDvwyU3cDBeRGG4SAl7Sm9Q3ML/lEt5pP4cV6tMI0hxBeHcJYr7Kw6o7aUi4m4RND7dTgK2P12P71wkv3rF9iWeDvsQzDCOcP30M6+RLsNz+EeiJl2CVfAWMlM/BTLsBZsZNWGfdwszsL2FD9S3YZN+AbeYXsEn7DDa7z8M+7Tze/Fz+Uvg5fAUcBC1wFDRhrogPD0kdvKXXML/lUyxSfIxl7afhrz6KYE0VOLr9iOzJR1xfBgXYcH8bNj3YgC0P12L716sGRsKziOeJLEN477of8ZdyGWjbPwZt12ewTPoc9PdvwCq9DowsLpi5AljniWC9T4yZ+8SwKZTAtlAMmwIRbPfxYZffALu9X8Iu8ypsd5/Hf5Vfw1vEi+NErr6jQEqNkIfkFgVYIPsEixUfUYAVyhMI1lQivLsQUT1ZWPVVMlbfScS6e9uw+cF6bHmwGtsercSOx5H6vcAinutYxHP41P2EmVkNsNh5BbSka7BMuQnLdAL0LCEYuRIw8pvBLGyBdbECM0vaMHN/G2xK22Bb2ga7AwrYlrbAbn8T7IrFsC/gwz6/Dnbpn+H1vEsjCGr+BY1wEQrhKqqHh+QGvKVXMV92EYvlZ7Gs9Rj8lIcRqC4HR7sPUd3piOtNQkL/e1jXvwEb7q7Flvtx2PYwBjseR+lPJBbxfIgMb5MrgPnuL2CefBMWqQ2wzBTCMkcKep4MVgVtYBS1g7FfBevSDsws68TMcg1sKsjuhG1FJ+wq1bCrUMGuvBX2B1pgXyKBfSEPdtlf4PWCKxTCgS+Dk0ACZ4EAc0UE3MU34S29jAUtH2GJ/ASWtx5CgKoCweoihHbmIKYnBStv78Tqvh0jgE33VmLzQDR2PAobMJlP/F/ifOI57ApbMCPpFsz31MEijQ+LLAlouTJY5reBXqiEVXEHGPs1YJRqwCzTwrq8CzMrujCzUgebKh1sq7pgV62DXbUWdtUa2FepYV/RilkHmjGrWAj73Bv4S/UtOPLFcBbwMVdYDzfhDXhJPoVX42UsaD6LJfLjWK6ohF9rGYJVBeB0ZiKyaw9iu99F/O2NWNO3Eev7V2PTvVgKsGWAM2SyqO4n+dsXHsIsuQEzUriYkSqEeZYUFrly0PLbYVmgBr2oE/QSDaz2a8Eo7QLjQBeY5TpYV3RjZiXZJKIbttXdsKvpxqwa7ff2NdqTsw5qd8+qbE+eVSY/Z18s+s4u5zr+dkkEFwEXrsLrcBNeg7fkE/g0fmwAHMVyRQX8FCUIUeWA05GCCE0KYnTvIU63CfE9a5HQG48N/THYfC8Cm++FwsT3+tMheo4MZikCmKWKMCOzCeY5CljktYO2Tw1aYScsizSgl3SBvr8LVhRAB0aZbgRhTSKqumFTrsXslKv3R04Ho7IvEX/4euEXcOHfgKvgKtyFl+Ep+jt8G89gQdMxLGmuxFJZOfwVeQhRZoOjTkZk57uI0W7CSt16xPckIKF3Jdb2RmFDfzg29ofAxPHiI5i+L4ZZaiNmZDRjRrYC5nvbYZ6vhkVBB2gFnaAVaWFZrJ0QwXi/HrYRFfXGoY3LvoB34a0rDXATXIGH8GN4iz4Eq/E0FjYdxpLmMixrKYafPA8Bikyw25MQpt6FyI7NiNWuwSpdDFb3RGHN7XCs6w3FhjshMJl9vB+mqVKYpjfDLFMBs5x2zNirhnl+B8wLNLAo1PcwwrJE+xLCasdnoL2T+71x2PHqbx9cG3Lj/wNewjPwEp4Gq/EYFkgPYVFTFZbL8uCvyEagYg9C2pMRrt6GcPVmxGhIQCziu2Ow5nYE1vWyseGrIJjYlHZhenoLTDPkMM1ug1mOGmZ71ZiR3wnzfZ16hAHyKgR9Tz1oy3JBC9z/kXHQ8crt/I0eD/45eArOwlt4GvPEx7CgsQJLpPlYKs2FX0sKAuWJCGndjtC2zQhrX4cYTTxWamMQr4tAQncY1t0OwvreAJgwijWYni7H9Mw2mGYrYZqjglluB8zyOkcR+8ZBZDSCtiwbtIBiWAZXpBoHHa+8Prl+3oN/Bl6CWvgID8NXWIaF4kIskeRgaWMGlklT4C/biSD5NoS2rgWnbQ0iVSsR0xGFlZowxGuDkaALxNpuv0GTaemtmJbZhumZ7ZierYJpjhqmJGDvKGLGqxAFaliE7ActsIQMD8vQg3uMg45X7tyTLE/eEXjzquAjqKEA84X5WCzOxNLGVCyTJsO/+V0EyTaCLU8Apy0BUapoxKg4iOvk6AFdgVij87tsMjVDiWmZ7ZiWpaQA03M6KMCkiK1XQPMrhGUIFR70sKNJxkHHK0/uwVovbqUewCuFr6CYAiwSpmKp5H2saNyOgKbNCJKtB1u+GhxFDMLbYhCtZCNWzcbKjkDEawKGVmvemW0yNaMdFCJLhWlZakzPVo+PoEZKjzAPKNKvPOcgLMOOgh5RyzUOOl55NFQPehHl8OaVwYdXAhZ/LxYIMrFIsAdLxUlYJtkBf+k6BMsSENwch1B5LMIUHIQr2IhqC0Ks0g+rOlYQ1MVey1A+m5qpxNRMNQWgejJEMh8W5Nyza2AZToY/AXrkqV/0zurRUFXk2VAFL6IMPtw8+HKzweLlYAE/DQv5u7FElIjlki3wa1yLwKZ4hDTHgd0ciTA5GxGtIRQgRhkw+lmvpasGX8tQYWom2S8jRiDDiLxOmCecB40cnbAjhvAnQY86RSJe/aZkKLe6itke9QeGPOuL4dVQAB8iB77cDLC4qVjIT6IAS4VbsFy8HstFCfCXxCFIGgF2czhCm9kIawlGhCLgaVTritFfKKakq4jX0lUYi5g6CcIipBy00IOwDD+mDx95ahgw4Uu3e13ZbM/6gmee9QXwbtgLn4ZM+BJpYHH3YCF/Jxbzt2Apnwy/BitEK+EvjkZwUwRCmjjgyNgIkwUPhLUEvPjzypQ0VeIUEvArEBZ+haANr36UYfWjTushkScn/G3Ts74g2qt+7zOfhgzMa0iFb8MesLjJWMjbhsX8TVjKX4t3BGuxQhgHf3Ekgho5YDexh0Kbg8d/mZ+Sphoai9BDjBF6iFmGAhYBJaANrz4Z/EXAM3rkyUl/hPKuTy+a15Ci823Y9XQ+8S4WcrdiMW8jlvDWYZlgFZYLY4dWCKMHAiWhtcFS9sTXm5Km1E1JU+FlhOolhGmyGBaBpaBFHDeMDgkwtB5A9lOriNqJP/R3rTRl9JQ0JcZFDG9uEpHZDosAEkCOzynQo18JgFVE7VOriBN/KmJQj1BOirDwL4JlZK0+9PgAWEWcGLIKP15k/FF/TKUqE02GAZMgzCOOwJIcockBsAo/TvagVdixCY/Yyco6sIxlHXhgwgOCRAyYpE6OmLHuEmicw5ON0FgArMKOwSrs6CCDc6SWwTnyi0eLGVRexAwq11kHlsE68ACsA0on+EZTlSyTVOXQZIhpyU2wCKmcaBOPBwCDc0TfoYcHGaGH5IzQgwSDfTCRwa5JZIZUJzJDqi4zg6sIZnDlIDOoYogZVA6yDYAh64DSSb7JVGURCTBGUJAxCHNONejhhjF68Rj9pQAwQg+BEXoQDDbZNWCGVIMZUgVmMNmVYAZVUOHHAH7hPzapSvlLiOETyoCYvpMLy5CqV93I/iiA3DjmxJWq1I2LMEDMo0+BTt3QRh4l/ijAhI8o49cYxOgJNYqYmtICGrkX9E+jfxTgN4YfrjHj9CrEtGQpaKHVo0+lvy/gV47NeKXf2NTp9EpEEomo0W9q8gb37wOGmMGVExyXv6X0Ryx1nxgPYRF1AnTqKdUQ/rcBBpjBVZMclf9OkXfsVOXgeHdts41XQOMcosLqwx/T9+SAQfI+YPxxf1ylKqNNqKdY5ZAxYmpaG8y218Ei/gKs2DWw4hzRdxgZ/jAYBiA99gwYwZXd5I3M+PJ/ak1JUyZOSVMSU8jX03TVM+NHD9OUZpjtkcA8kQvrXfXP/yOp7tu/pnwpML7Ob6n/BzYksoccqPiRAAAAAElFTkSuQmCC" InformativeScreenshot="cd1567d983f61ec746a0cc82c0fb53a4.jpg" Reference="2cLmJu5YmECa74LfIK_pQw/mS98odHflUib9zrk69Ilrw" Selector="&lt;html app='msedge.exe' url='https://convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx' /&gt;" Url="[contract_url]" Version="V2" />
      </uix:NApplicationCard.TargetApp>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uix:NApplicationCard>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="O(n) operation:&#xA;for each src number, search for it in the filter, find relevant info, and fill it in the excel sheet" DisplayName="For each unique SRC number:" sap:VirtualizedContainerService.HintSize="1148,14752.8" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[UniqueSRCnumbers_arg]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="CurrentSrcNumber" />
          </ActivityAction.Argument>
          <Sequence DisplayName="For each SRC Number" sap:VirtualizedContainerService.HintSize="1145.6,14578.4" sap2010:WorkflowViewState.IdRef="Sequence_92">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="PnID_Number" />
              <Variable x:TypeArguments="x:String" Name="PnIDstatus" />
              <Variable x:TypeArguments="x:String" Name="Reviewer_comments" />
              <Variable x:TypeArguments="x:Boolean" Name="Is_Locked" />
              <Variable x:TypeArguments="x:Boolean" Name="SRC_IsUpdated" />
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="NewPnIDsHash" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uix:NApplicationCard sap2010:Annotation.AnnotationText="Find SRC number using Filter, click on latest Revision, find out whether it is locked" AttachMode="ByInstance" CloseMode="Never" DisplayName="Edge Prolog Converge" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="1112,1696.8" sap2010:WorkflowViewState.IdRef="NApplicationCard_7" ScopeGuid="4d7fd60a-4c68-4051-8296-fb59a9563c16" Version="V2">
              <uix:NApplicationCard.AutoGenerationOptions>
                <uix:GenerationOptions ExpectedInputs="{x:Null}" Prompt="{x:Null}" Url="{x:Null}">
                  <uix:GenerationOptions.ExpectedOutputs>
                    <scg:List x:TypeArguments="x:String" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </uix:GenerationOptions.ExpectedOutputs>
                </uix:GenerationOptions>
              </uix:NApplicationCard.AutoGenerationOptions>
              <uix:NApplicationCard.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="SRC checking loop" sap:VirtualizedContainerService.HintSize="467.2,1416.8" sap2010:WorkflowViewState.IdRef="Sequence_66">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="Table" />
                      <Variable x:TypeArguments="x:Boolean" Name="review_isloaded" />
                      <Variable x:TypeArguments="x:String" Name="Reviewer_comments" />
                      <Variable x:TypeArguments="x:String" Name="submittals_url" />
                      <Variable x:TypeArguments="x:Boolean" Name="element_found" />
                      <Variable x:TypeArguments="x:String" Name="dynamic_selector" />
                      <Variable x:TypeArguments="x:String" Name="Selected_Revision" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Table_doublecheck" />
                      <Variable x:TypeArguments="sd:DataTable" Name="Rev_Column" />
                      <Variable x:TypeArguments="x:String" Name="SRC_num" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If sap2010:Annotation.AnnotationText="SRC no. could be blank" Condition="[CurrentSrcNumber Is Nothing or CurrentSrcNumber.Equals(&quot; &quot;)]" DisplayName="Ensure that SRC number is not null" sap:VirtualizedContainerService.HintSize="433.6,367.2" sap2010:WorkflowViewState.IdRef="If_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_71">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_7" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_72">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DisplayName="Type the SRC number from the current row into the Input 'INPUT lstList_TB' input box" EmptyFieldMode="SingleLine" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="433.6,286.4" sap2010:WorkflowViewState.IdRef="NTypeInto_4" ScopeIdentifier="4d7fd60a-4c68-4051-8296-fb59a9563c16" Text="[CurrentSrcNumber.ToString() +&quot;[k(enter)]&quot;]">
                      <uix:NTypeInto.Target>
                        <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" ContentHash="x0aljnW8bUKTPldvQHtTJQ" DesignTimeRectangle="152, 437, 181, 33" FuzzySelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl parentid='dvCH_lstList_SubmittalPackages' tag='TABLE' matching:parentid='fuzzy' fuzzylevel:parentid='0.0' /&gt;&lt;webctrl class='WEI6J7 WEI688  WGGIJH' tag='TD' type='FilterColumn' aaname='' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' /&gt;" Guid="c3957c6c-ad5c-4239-9777-52b27349c73b" InformativeScreenshot="ee98dbdee8c02fc503b8993e7b5e60c8.png" Reference="2cLmJu5YmECa74LfIK_pQw/BOu6Ku1JYUik-24X8wKr4Q" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Prolog Converge' /&gt;" SearchSteps="FuzzySelector" Version="V6" Visibility="Interactive" WaitForReadyArgument="None">
                          <uix:TargetAnchorable.Anchors>
                            <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                              <uix:Target CVScreenId="c09fd68d-8291-4f78-b6cd-a3f8811a9b49" CvTextArea="150, 399, 121, 19" CvTextArgument="Submittal #" CvType="Text" DesignTimeRectangle="153, 397, 121, 24" FuzzySelectorArgument="&lt;webctrl id='fraMainPI' tag='IFRAME' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl parentid='dvCH_lstList_SubmittalPackages' tag='TABLE' matching:parentid='fuzzy' fuzzylevel:parentid='0.0' /&gt;&lt;webctrl type='' tag='NOBR' class='' aaname='Submittal #' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' check:innerText='Submittal #' /&gt;" Guid="dbe2d544-af80-4c5c-b668-39d59537b0a3" SearchSteps="FuzzySelector, CV" />
                            </scg:List>
                          </uix:TargetAnchorable.Anchors>
                        </uix:TargetAnchorable>
                      </uix:NTypeInto.Target>
                      <uix:NTypeInto.VerifyOptions>
                        <uix:VerifyExecutionTypeIntoOptions DisplayName="{x:Null}" Mode="Appears">
                          <uix:VerifyExecutionTypeIntoOptions.Retry>
                            <InArgument x:TypeArguments="x:Boolean" />
                          </uix:VerifyExecutionTypeIntoOptions.Retry>
                          <uix:VerifyExecutionTypeIntoOptions.Timeout>
                            <InArgument x:TypeArguments="x:Double" />
                          </uix:VerifyExecutionTypeIntoOptions.Timeout>
                        </uix:VerifyExecutionTypeIntoOptions>
                      </uix:NTypeInto.VerifyOptions>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uix:NTypeInto>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,114.4" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SRC_num]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CurrentSrcNumber.ToString()]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Find LargestRevNumber and Is_locked - Invoke Workflow File (Find LargestRevNumber and Is_locked.xaml)" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="P&amp;ID tracker updater\Generalizable Sequences\Find LargestRevNumber and Is_locked.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="SRC_num">[SRC_num]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="LargestRevNumber">[LargestRevNumber]</OutArgument>
                        <OutArgument x:TypeArguments="x:Boolean" x:Key="Is_Locked">[Is_Locked]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,114.4" sap2010:WorkflowViewState.IdRef="Assign_31">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[dynamic_selector]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[string.Format("&lt;webctrl id='fraMainPI' tag='IFRAME' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl id='tb_lstList_SubmittalPackages' tag='TABLE' matching:id='fuzzy' fuzzylevel:id='0.0' /&gt;&lt;webctrl type='' class='' tag='NOBR' aaname='{0}' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' check:innerText='{0}' /&gt;", LargestRevNumber)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,114.4" sap2010:WorkflowViewState.IdRef="Assign_32">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Selected_Revision]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[LargestRevNumber]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <uix:NClick ActivateBefore="True" ClickType="Double" DisplayName="Click Largest Rev Number" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="433.6,182.4" sap2010:WorkflowViewState.IdRef="NClick_7" InteractionMode="DebuggerApi" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="4d7fd60a-4c68-4051-8296-fb59a9563c16" Version="V4">
                      <uix:NClick.Target>
                        <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" CVScreenId="25d2a1a1-0daa-479f-9a85-5e59f22a2828" ContentHash="57NAf6X59km0PogiwRMt5Q" CvTextArea="791, 677, 15, 16" CvTextArgument="[Selected_Revision]" CvType="Text" DesignTimeRectangle="998, 531, 39, 18" FuzzySelectorArgument="[dynamic_selector]" Guid="48abb019-29aa-4e5f-88b2-247bf711dfbe" ImageBase64="" InformativeScreenshot="d0eed6f764d80978cacf797e231ddb91.png" NativeTextArgument="[Selected_Revision]" Reference="2cLmJu5YmECa74LfIK_pQw/AZXCHHf-d0G7Po_4C1LCWw" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Prolog Converge' /&gt;" SearchSteps="FuzzySelector, TextNative, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                      </uix:NClick.Target>
                    </uix:NClick>
                  </Sequence>
                </ActivityAction>
              </uix:NApplicationCard.Body>
              <uix:NApplicationCard.TargetApp>
                <uix:TargetApp Area="-1928, -817, 1936, 1048" BrowserType="Edge" ContentHash="M47Hq3SQw0uuT8R5jaMnNg" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAABASSURBVGhDvdl5VFPnugZwrApCCAky2HvvucvTtW7PWq1MMiNxrsocwgyKOM+tKEiZQZBJZHYWx9bqac/R1mWtQ4GdOQRCAiSBhIAUUZx6aWtrT6uX5669EwajQNvT9l3r/Xfn+X15v2/vnZiY/A7lTNxPdCLuEU7EvUFH7lfPHLi34cDtgQNXBwduFxx4GjjyO+AoUMFR0D7oLFLoXMSyy64SKcv4Wn9auRGDia7EI50LcX/IhRiAE9EPR6IPjtxeQ/huzOF2YQ5PCwdeBxz4ajI8HAVtcBYp4CKWYa5ECnep+JlHE1/uLav/czDuxLeJbsTgoBvxv3AlHmEu8QAkwJnohxMF6DMCaDCHAqjgwNcDHAWteoC4mQTAo0kAn5Z6sBTXBxe2XU00/szfpbyIH1iexJMBD+I7uBODcCO+pgAj4bl9cOJ+BSdqfLqp0dEDOvXNV44BKOAsaqEAro0SeMsIeMtIwA0sar+CJcpLA8s7Lv5+34gX8UOtJ/FkiAzvQXwLd+IbDH8DLtx7cOGSAH14x+G552rhwNVgDpcEqKjWA1rhKJDDSdgCF7EUro0ieDTxKMCC1qsUYLn6Ivw7PxwK1J6pNc7yq8ubeCr3In6AJ/EE+tUnw+tX35X7gAI4GwCO3O4xADJ8B+bw1FT4t3lKzOG3w4FPAlrgJJQZABJ4NdfDR/Yl5iuukauPFR0XEdR1CkFdJxHac1RnnOkXlzfxo86LeIpRALn6g3AnAdyHcOXehwv3Lpy5d+DE7aEA+tHppMK/zSWDD7cSb/PaqHYQyCmEi7gR7lIBPJu4FIAlJwH/xDL1RQRqTyNEdxxht6sR1Vf+JK6/cLZxvgnLh/iXzof4EaMAcny+ocK7UeEfjADI0XGiVp9c+eG5Hw7ePqZfBDgJm+AqEcFDOgz4wgC4gADNMKAG0X0HENdf9NQ447jlQ/wkJ8N7jwC+fwXgPuZy78KF2rzDs6/Rjw6vw7DiZOjWkeCjrR+juWIJ3Bv58KQANzFfcRWL2v4J/84zCNKeAFt3GJG9ZYjpK0b83VysuZ82+TjNI36qnUf8BD2ADE/2E3gS38KDGp/HIwBXav574cTrgSNPf8Miz3z9ph0OP9zGABmchY1wk5CAOvjIboAlv4p3lBewQn3WADiEiNvliO0rQvzdHKx9kIaNj3ZdNs48UvOIn1nziJ+H5hH/ogA+xFN4E0/gRXwHT+IbPYBLAsjxIU+fO2MAOgowh9ysVOuDjtfUHhBJMFcsogDzZJ9Tq68HnKHCh98+gNi+fMT2FSD+XhbWP0jGpkfvDW39euurj1hf4tkAufovAr43AAbhcOUO/uecEm/UtuCNky1445QMb5yU4s2/K/DW9c4xgPYJAXP4rdT8u4hEcJPw4N18HSz5FSxs/QeWtF2Ef0ctgrUHwekuR2RvMWL79iLh3vvY+PBdbH28Edu/XtdnnJ0Mn+hL/IxRwFOq53zSj/8sagDzvQ9gtf0DWO28CObuj2G955K+kz6B9e4LsH7vHGx3ncV/19zCm5+2vBR6bDvwyU3cDBeRGG4SAl7Sm9Q3ML/lEt5pP4cV6tMI0hxBeHcJYr7Kw6o7aUi4m4RND7dTgK2P12P71wkv3rF9iWeDvsQzDCOcP30M6+RLsNz+EeiJl2CVfAWMlM/BTLsBZsZNWGfdwszsL2FD9S3YZN+AbeYXsEn7DDa7z8M+7Tze/Fz+Uvg5fAUcBC1wFDRhrogPD0kdvKXXML/lUyxSfIxl7afhrz6KYE0VOLr9iOzJR1xfBgXYcH8bNj3YgC0P12L716sGRsKziOeJLEN477of8ZdyGWjbPwZt12ewTPoc9PdvwCq9DowsLpi5AljniWC9T4yZ+8SwKZTAtlAMmwIRbPfxYZffALu9X8Iu8ypsd5/Hf5Vfw1vEi+NErr6jQEqNkIfkFgVYIPsEixUfUYAVyhMI1lQivLsQUT1ZWPVVMlbfScS6e9uw+cF6bHmwGtsercSOx5H6vcAinutYxHP41P2EmVkNsNh5BbSka7BMuQnLdAL0LCEYuRIw8pvBLGyBdbECM0vaMHN/G2xK22Bb2ga7AwrYlrbAbn8T7IrFsC/gwz6/Dnbpn+H1vEsjCGr+BY1wEQrhKqqHh+QGvKVXMV92EYvlZ7Gs9Rj8lIcRqC4HR7sPUd3piOtNQkL/e1jXvwEb7q7Flvtx2PYwBjseR+lPJBbxfIgMb5MrgPnuL2CefBMWqQ2wzBTCMkcKep4MVgVtYBS1g7FfBevSDsws68TMcg1sKsjuhG1FJ+wq1bCrUMGuvBX2B1pgXyKBfSEPdtlf4PWCKxTCgS+Dk0ACZ4EAc0UE3MU34S29jAUtH2GJ/ASWtx5CgKoCweoihHbmIKYnBStv78Tqvh0jgE33VmLzQDR2PAobMJlP/F/ifOI57ApbMCPpFsz31MEijQ+LLAlouTJY5reBXqiEVXEHGPs1YJRqwCzTwrq8CzMrujCzUgebKh1sq7pgV62DXbUWdtUa2FepYV/RilkHmjGrWAj73Bv4S/UtOPLFcBbwMVdYDzfhDXhJPoVX42UsaD6LJfLjWK6ohF9rGYJVBeB0ZiKyaw9iu99F/O2NWNO3Eev7V2PTvVgKsGWAM2SyqO4n+dsXHsIsuQEzUriYkSqEeZYUFrly0PLbYVmgBr2oE/QSDaz2a8Eo7QLjQBeY5TpYV3RjZiXZJKIbttXdsKvpxqwa7ff2NdqTsw5qd8+qbE+eVSY/Z18s+s4u5zr+dkkEFwEXrsLrcBNeg7fkE/g0fmwAHMVyRQX8FCUIUeWA05GCCE0KYnTvIU63CfE9a5HQG48N/THYfC8Cm++FwsT3+tMheo4MZikCmKWKMCOzCeY5CljktYO2Tw1aYScsizSgl3SBvr8LVhRAB0aZbgRhTSKqumFTrsXslKv3R04Ho7IvEX/4euEXcOHfgKvgKtyFl+Ep+jt8G89gQdMxLGmuxFJZOfwVeQhRZoOjTkZk57uI0W7CSt16xPckIKF3Jdb2RmFDfzg29ofAxPHiI5i+L4ZZaiNmZDRjRrYC5nvbYZ6vhkVBB2gFnaAVaWFZrJ0QwXi/HrYRFfXGoY3LvoB34a0rDXATXIGH8GN4iz4Eq/E0FjYdxpLmMixrKYafPA8Bikyw25MQpt6FyI7NiNWuwSpdDFb3RGHN7XCs6w3FhjshMJl9vB+mqVKYpjfDLFMBs5x2zNirhnl+B8wLNLAo1PcwwrJE+xLCasdnoL2T+71x2PHqbx9cG3Lj/wNewjPwEp4Gq/EYFkgPYVFTFZbL8uCvyEagYg9C2pMRrt6GcPVmxGhIQCziu2Ow5nYE1vWyseGrIJjYlHZhenoLTDPkMM1ug1mOGmZ71ZiR3wnzfZ16hAHyKgR9Tz1oy3JBC9z/kXHQ8crt/I0eD/45eArOwlt4GvPEx7CgsQJLpPlYKs2FX0sKAuWJCGndjtC2zQhrX4cYTTxWamMQr4tAQncY1t0OwvreAJgwijWYni7H9Mw2mGYrYZqjglluB8zyOkcR+8ZBZDSCtiwbtIBiWAZXpBoHHa+8Prl+3oN/Bl6CWvgID8NXWIaF4kIskeRgaWMGlklT4C/biSD5NoS2rgWnbQ0iVSsR0xGFlZowxGuDkaALxNpuv0GTaemtmJbZhumZ7ZierYJpjhqmJGDvKGLGqxAFaliE7ActsIQMD8vQg3uMg45X7tyTLE/eEXjzquAjqKEA84X5WCzOxNLGVCyTJsO/+V0EyTaCLU8Apy0BUapoxKg4iOvk6AFdgVij87tsMjVDiWmZ7ZiWpaQA03M6KMCkiK1XQPMrhGUIFR70sKNJxkHHK0/uwVovbqUewCuFr6CYAiwSpmKp5H2saNyOgKbNCJKtB1u+GhxFDMLbYhCtZCNWzcbKjkDEawKGVmvemW0yNaMdFCJLhWlZakzPVo+PoEZKjzAPKNKvPOcgLMOOgh5RyzUOOl55NFQPehHl8OaVwYdXAhZ/LxYIMrFIsAdLxUlYJtkBf+k6BMsSENwch1B5LMIUHIQr2IhqC0Ks0g+rOlYQ1MVey1A+m5qpxNRMNQWgejJEMh8W5Nyza2AZToY/AXrkqV/0zurRUFXk2VAFL6IMPtw8+HKzweLlYAE/DQv5u7FElIjlki3wa1yLwKZ4hDTHgd0ciTA5GxGtIRQgRhkw+lmvpasGX8tQYWom2S8jRiDDiLxOmCecB40cnbAjhvAnQY86RSJe/aZkKLe6itke9QeGPOuL4dVQAB8iB77cDLC4qVjIT6IAS4VbsFy8HstFCfCXxCFIGgF2czhCm9kIawlGhCLgaVTritFfKKakq4jX0lUYi5g6CcIipBy00IOwDD+mDx95ahgw4Uu3e13ZbM/6gmee9QXwbtgLn4ZM+BJpYHH3YCF/Jxbzt2Apnwy/BitEK+EvjkZwUwRCmjjgyNgIkwUPhLUEvPjzypQ0VeIUEvArEBZ+haANr36UYfWjTushkScn/G3Ts74g2qt+7zOfhgzMa0iFb8MesLjJWMjbhsX8TVjKX4t3BGuxQhgHf3Ekgho5YDexh0Kbg8d/mZ+Sphoai9BDjBF6iFmGAhYBJaANrz4Z/EXAM3rkyUl/hPKuTy+a15Ci823Y9XQ+8S4WcrdiMW8jlvDWYZlgFZYLY4dWCKMHAiWhtcFS9sTXm5Km1E1JU+FlhOolhGmyGBaBpaBFHDeMDgkwtB5A9lOriNqJP/R3rTRl9JQ0JcZFDG9uEpHZDosAEkCOzynQo18JgFVE7VOriBN/KmJQj1BOirDwL4JlZK0+9PgAWEWcGLIKP15k/FF/TKUqE02GAZMgzCOOwJIcockBsAo/TvagVdixCY/Yyco6sIxlHXhgwgOCRAyYpE6OmLHuEmicw5ON0FgArMKOwSrs6CCDc6SWwTnyi0eLGVRexAwq11kHlsE68ACsA0on+EZTlSyTVOXQZIhpyU2wCKmcaBOPBwCDc0TfoYcHGaGH5IzQgwSDfTCRwa5JZIZUJzJDqi4zg6sIZnDlIDOoYogZVA6yDYAh64DSSb7JVGURCTBGUJAxCHNONejhhjF68Rj9pQAwQg+BEXoQDDbZNWCGVIMZUgVmMNmVYAZVUOHHAH7hPzapSvlLiOETyoCYvpMLy5CqV93I/iiA3DjmxJWq1I2LMEDMo0+BTt3QRh4l/ijAhI8o49cYxOgJNYqYmtICGrkX9E+jfxTgN4YfrjHj9CrEtGQpaKHVo0+lvy/gV47NeKXf2NTp9EpEEomo0W9q8gb37wOGmMGVExyXv6X0Ryx1nxgPYRF1AnTqKdUQ/rcBBpjBVZMclf9OkXfsVOXgeHdts41XQOMcosLqwx/T9+SAQfI+YPxxf1ylKqNNqKdY5ZAxYmpaG8y218Ei/gKs2DWw4hzRdxgZ/jAYBiA99gwYwZXd5I3M+PJ/ak1JUyZOSVMSU8jX03TVM+NHD9OUZpjtkcA8kQvrXfXP/yOp7tu/pnwpML7Ob6n/BzYksoccqPiRAAAAAElFTkSuQmCC" InformativeScreenshot="cd1567d983f61ec746a0cc82c0fb53a4.jpg" Reference="SRHzbWhimEWn6FoI8hcZfg/1Ey88bFqG06kIV6iLOxgNQ" Selector="&lt;html app='msedge.exe' url='https://convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx' /&gt;" Url="[contract_url]" Version="V2" />
              </uix:NApplicationCard.TargetApp>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uix:NApplicationCard>
            <uix:NCheckState sap2010:Annotation.AnnotationText="Checking all relevant details about latest revision in Prolog, submittals page" DisplayName="Check App State 'Reading Submittals - Wo…'" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="1112,3775.2" sap2010:WorkflowViewState.IdRef="NCheckState_3" IsLoose="True" Timeout="10" Version="V4">
              <uix:NCheckState.IfExists>
                <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="604.8,3493.6" sap2010:WorkflowViewState.IdRef="Sequence_86">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Edge Reading Submittals(2)(1)" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="571.2,3432" sap2010:WorkflowViewState.IdRef="NApplicationCard_6" InteractionMode="DebuggerApi" ScopeGuid="329f03eb-fe68-46b2-b90a-97de11c5861f" Version="V2">
                    <uix:NApplicationCard.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="537.6,3190.4" sap2010:WorkflowViewState.IdRef="Sequence_85">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="504,391.2" sap2010:WorkflowViewState.IdRef="CommentOut_56">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,240.8" sap2010:WorkflowViewState.IdRef="Sequence_227">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uix:NGetText DelayAfter="0" DelayBefore="0" DisplayName="Get Text 'Number'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,180.8" sap2010:WorkflowViewState.IdRef="NGetText_7" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" TextString="[PnID_Number]" Version="V4">
                                  <uix:NGetText.Target>
                                    <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage.aspx" CVScreenId="4c0e51f5-8afa-491e-bee7-bd98ea58b410" ContentHash="4gmiIFqpNUahA0pJFAx6Vw" CvElementArea="12, 216, 138, 24" CvType="InputBox" DesignTimeRectangle="13, 217, 137, 23" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl tag='INPUT' type='text' class='TextDisabled Text' aaname='Number' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' /&gt;" Guid="7e7274d4-3aee-491e-a443-c91e5c99cad6" InformativeScreenshot="d4d09bde60021b335114899a517288a9.png" IsResponsive="True" Reference="2cLmJu5YmECa74LfIK_pQw/xSDa-z-MZ06Y65d75Xy_2w" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Reading Submittals' /&gt;" SearchSteps="FuzzySelector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None">
                                      <uix:TargetAnchorable.Anchors>
                                        <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                          <uix:Target CVScreenId="4c0e51f5-8afa-491e-bee7-bd98ea58b410" CvTextArea="12, 197, 45, 12" CvTextArgument="Number" CvType="Text" DesignTimeRectangle="13, 197, 43, 13" ElementType="Text" FuzzySelectorArgument="&lt;webctrl tag='LABEL' type='' class='aspNetDisabled Label' aaname='Number' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' check:innerText='Number' /&gt;" Guid="d97abe53-6949-4d5b-9167-a2e4a41fac87" SearchSteps="FuzzySelector, CV" />
                                        </scg:List>
                                      </uix:TargetAnchorable.Anchors>
                                    </uix:TargetAnchorable>
                                  </uix:NGetText.Target>
                                </uix:NGetText>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <uix:NGetText DelayAfter="0" DelayBefore="0" DisplayName="Get Text 'Reviewer's Comments'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="504,189.6" sap2010:WorkflowViewState.IdRef="NGetText_8" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" TextString="[Reviewer_comments]" Version="V4">
                            <uix:NGetText.Target>
                              <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" CVScreenId="d264ae73-0fe2-455f-a04b-76bfc82b9e83" ContentHash="VAS_WUNz8kmzYkxLZA_3qw" CvElementArea="21, 617, 589, 115" CvType="InputBox" DesignTimeRectangle="19, 618, 592, 113" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl tag='TEXTAREA' type='' class='TextDisabled Text' aaname='Reviewer&amp;apos;s Comments' matching:class='fuzzy' fuzzylevel:class='0.0' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' /&gt;" Guid="6b1a362c-dc94-46b9-8407-e9d1bf40e3a1" InformativeScreenshot="6d563e9067a3c16c526fdc11de0412e7.png" IsResponsive="True" Reference="2cLmJu5YmECa74LfIK_pQw/22vd9k51Z0KDkh8xHCq1Yg" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Reading Submittals' /&gt;" SearchSteps="Selector, FuzzySelector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None">
                                <uix:TargetAnchorable.Anchors>
                                  <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                    <uix:Target CVScreenId="d264ae73-0fe2-455f-a04b-76bfc82b9e83" CvTextArea="17, 593, 180, 16" CvTextArgument="Reviewer's Comments" CvType="Text" DesignTimeRectangle="19, 592, 177, 19" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname='Reviewer&amp;apos;s Comments' class='Label' parentid='mainTabControl' tag='LABEL' type='' matching:aaname='fuzzy' fuzzylevel:aaname='0.0' matching:class='fuzzy' fuzzylevel:class='0.0' matching:parentid='fuzzy' fuzzylevel:parentid='0.0' check:innerText='Reviewer&amp;apos;s Comments' /&gt;" Guid="2fc8b238-2085-48cb-834e-bbf63a6556ab" SearchSteps="FuzzySelector, CV" />
                                  </scg:List>
                                </uix:TargetAnchorable.Anchors>
                              </uix:TargetAnchorable>
                            </uix:NGetText.Target>
                          </uix:NGetText>
                          <ui:IfElseIfV2 sap2010:Annotation.AnnotationText="Check if got merged with another SRC" Condition="[Reviewer_comments.ToLower.Contains(&quot;merged&quot;)]" DisplayName="Update PnID status" sap:VirtualizedContainerService.HintSize="504,2272.8" sap2010:WorkflowViewState.IdRef="IfElseIfV2_4">
                            <ui:IfElseIfV2.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="502.4,1890.4" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:IfElseIfV2 sap2010:Annotation.AnnotationText="Approved, AWC or Rejected" Condition="[Reviewer_comments.ToLower.Contains(&quot;approved with comments&quot;)]" DisplayName="Update PnID status" sap:VirtualizedContainerService.HintSize="468.8,955.2" sap2010:WorkflowViewState.IdRef="IfElseIfV2_3">
                                  <ui:IfElseIfV2.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_73">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[PnIDstatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Pending</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ui:IfElseIfV2.Else>
                                  <ui:IfElseIfV2.ElseIfs>
                                    <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                      <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Reviewer_comments.ToLower.Contains(&quot;rejected&quot;)]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
                                        <ui:IfElseIfBlock.Then>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_34">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[PnIDstatus]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Rejected</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                      <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Reviewer_comments.ToLower.Contains(&quot;approved&quot;)]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_4">
                                        <ui:IfElseIfBlock.Then>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_165">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_33">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[PnIDstatus]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Approved</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                    </sc:BindingList>
                                  </ui:IfElseIfV2.ElseIfs>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:IfElseIfV2.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[PnIDstatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">AWC</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ui:IfElseIfV2.Then>
                                </ui:IfElseIfV2>
                                <Assign DisplayName="Clear PnIDsHash" sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_106">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[NewPnIDsHash]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If sap2010:Annotation.AnnotationText="if largest rev number &gt; the rev number in excel:&#xA;Check for new P&amp;IDs in the submittal" Condition="[Src_MRU_revision(CurrentSrcNumber)(0) &lt;&gt; LargestRevNumber]" sap:VirtualizedContainerService.HintSize="468.8,669.6" sap2010:WorkflowViewState.IdRef="If_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,397.6" sap2010:WorkflowViewState.IdRef="Sequence_238">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_58">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,168.8" sap2010:WorkflowViewState.IdRef="Sequence_235">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_30" Text="[CurrentSrcNumber.toString + &quot; &quot; + SrcRowNumbers(CurrentSrcNumber).Count.ToString]" />
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_59">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,168.8" sap2010:WorkflowViewState.IdRef="Sequence_241">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_32" Text="[String.join(&quot;,&quot;,New HashSet(Of String)(set_SheetNo(CurrentSrcNumber)))]" />
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Check new P&amp;IDs in existing excel - Invoke Workflow File (P&amp;ID tracker updater\Generalizable Sequences\Check new P&amp;IDs in existing excel.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="P&amp;ID tracker updater\Generalizable Sequences\Check new P&amp;IDs in existing excel.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:HashSet(x:String)" x:Key="Hashset_SheetNo">[New HashSet(Of String)(set_SheetNo(CurrentSrcNumber))]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="PnID_count">[SrcRowNumbers(CurrentSrcNumber).Count]</InArgument>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Submittals_hash">[NewPnIDsHash]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="CommentOut_57">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,168.8" sap2010:WorkflowViewState.IdRef="Sequence_236">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_31" Text="[String.Join(&quot;,&quot;, NewPnIDsHash.Keys.AsEnumerable.toList)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:MessageBox>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_237">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <If sap2010:Annotation.AnnotationText="If Approved, check workflow closed date" Condition="[((PnIDstatus = &quot;Approved&quot;) Or (PnIDstatus = &quot;AWC&quot;)) and Is_Locked]" DisplayName="Check workflow closed date" sap:VirtualizedContainerService.HintSize="468.8,92" sap2010:WorkflowViewState.IdRef="If_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,694.4" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="Date_Sentence" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <uix:NClick ActivateBefore="True" ClickType="Single" DelayBefore="0" DisplayName="Click 'Workflow'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="433.6,225.6" sap2010:WorkflowViewState.IdRef="NClick_8" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" Version="V4">
                                        <uix:NClick.Target>
                                          <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage.aspx" CVScreenId="104468e5-fe15-4293-be86-1ce3280aeae5" ContentHash="7uIHRFZqmEWdM5quY9Dzxw" CvTextArea="393, 261, 56, 14" CvTextArgument="Workflow" CvType="Text" DesignTimeRectangle="394, 260, 54, 22" ElementType="Text" FullSelectorArgument="&lt;webctrl aaname='Workflow' parentid='mainTabControl' tag='SPAN' /&gt;" Guid="6007c8b4-fa89-4963-bcfb-0b31f5f8900a" InformativeScreenshot="501f3ceca7031dc5b4a26e7cf9a5fa2a.png" Reference="2cLmJu5YmECa74LfIK_pQw/oRA7atIImEqj8NJsntv_XQ" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Reading Submittals' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                                        </uix:NClick.Target>
                                        <uix:NClick.VerifyOptions>
                                          <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                            <uix:VerifyExecutionOptions.Retry>
                                              <InArgument x:TypeArguments="x:Boolean" />
                                            </uix:VerifyExecutionOptions.Retry>
                                            <uix:VerifyExecutionOptions.Timeout>
                                              <InArgument x:TypeArguments="x:Double" />
                                            </uix:VerifyExecutionOptions.Timeout>
                                          </uix:VerifyExecutionOptions>
                                        </uix:NClick.VerifyOptions>
                                      </uix:NClick>
                                      <uix:NGetText DelayAfter="0" DisplayName="Get Date" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="433.6,189.6" sap2010:WorkflowViewState.IdRef="NGetText_9" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" TextString="[Date_Sentence]" Version="V4">
                                        <uix:NGetText.Target>
                                          <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage.aspx" CVScreenId="65d6c668-ff94-451a-86ee-313a5979a276" ContentHash="FIoL8MSg6EexaUYDI3htuw" CvType="AnyWordGroup" DesignTimeRectangle="49, 299, 347, 13" ElementType="Text" FullSelectorArgument="&lt;webctrl class='Label' parentid='mainTabControl' tag='SPAN' /&gt;" Guid="00351980-00a6-474e-95d3-0c174473d2d6" InformativeScreenshot="39b3b17dd45cc59923d6c9916e66dc1e.png" Reference="2cLmJu5YmECa74LfIK_pQw/v9_-hP8KQkqGbQ7hpBfXHg" ScopeSelectorArgument="&lt;html app='msedge.exe' title='Reading Submittals' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                                        </uix:NGetText.Target>
                                      </uix:NGetText>
                                      <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="date is stored in variable workflow_closed_date" Code="string[] parts =sentence.Split(' ');&#xA;date = parts[parts.Length - 1];" DisplayName="Extract the date from the last few characters of the string date_sentence using Invoke Code." sap:VirtualizedContainerService.HintSize="433.6,219.2" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                                        <ui:InvokeCode.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="sentence">[Date_Sentence]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="date">[workflow_closed_date]</OutArgument>
                                        </ui:InvokeCode.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeCode>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_35">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[workflow_closed_date]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Still Open</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ui:IfElseIfV2.Else>
                            <ui:IfElseIfV2.ElseIfs>
                              <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                            </ui:IfElseIfV2.ElseIfs>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:IfElseIfV2.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="502.4,164.8" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Boolean" Name="removefn" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="468.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_101">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[removefn]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">[set_SheetNo.remove(CurrentSrcNumber)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:IfElseIfV2.Then>
                          </ui:IfElseIfV2>
                          <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Close'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="504,225.6" sap2010:WorkflowViewState.IdRef="NClick_10" InteractionMode="HardwareEvents" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" Version="V4">
                            <uix:NClick.Target>
                              <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage.aspx" CVScreenId="bfe35170-d988-4fd6-b5e6-63f236166045" ContentHash="UdocBP_Jokam67OwfUPJ_g" CvElementArea="789, 6, 19, 18" CvType="CloseButton" DesignTimeRectangle="776, 1, 46, 31" ElementType="Button" FullSelectorArgument="&lt;ctrl role='pane' idx='1' /&gt;&lt;ctrl name='Close' role='push button' idx='1' /&gt;" Guid="59fbc468-8201-4333-92c3-e1a0855c9074" InformativeScreenshot="69fa7971fcdcac3697a1014aeb1e6a03.png" Reference="SRHzbWhimEWn6FoI8hcZfg/SkLvjcDo-ESB0ngMIxrEjA" ScopeSelectorArgument="&lt;wnd app='msedge.exe' cls='Chrome_WidgetWin_1' title='????ing Submittals - Work - Microsoft​ Edge' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None">
                                <uix:TargetAnchorable.Anchors>
                                  <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                    <uix:Target CVScreenId="bfe35170-d988-4fd6-b5e6-63f236166045" CvElementArea="743, 6, 20, 19" CvType="MaximizeButton" DesignTimeRectangle="730, 1, 46, 31" ElementType="Button" FuzzySelectorArgument="&lt;ctrl name='* Submittals - Microsoft Edge' role='pane' matching:name='fuzzy' fuzzylevel:name='0.0' /&gt;&lt;ctrl name='Maximize' role='push button' automationid='' matching:name='fuzzy' fuzzylevel:name='0.0' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' check:text='Maximize' /&gt;" Guid="58141e29-15ad-42af-8a76-daad3406f9b3" SearchSteps="FuzzySelector, CV" />
                                  </scg:List>
                                </uix:TargetAnchorable.Anchors>
                              </uix:TargetAnchorable>
                            </uix:NClick.Target>
                            <uix:NClick.VerifyOptions>
                              <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                <uix:VerifyExecutionOptions.Retry>
                                  <InArgument x:TypeArguments="x:Boolean" />
                                </uix:VerifyExecutionOptions.Retry>
                                <uix:VerifyExecutionOptions.Timeout>
                                  <InArgument x:TypeArguments="x:Double" />
                                </uix:VerifyExecutionOptions.Timeout>
                              </uix:VerifyExecutionOptions>
                            </uix:NClick.VerifyOptions>
                          </uix:NClick>
                          <uix:NCheckState DisplayName="Check App State 'Leave site Changes you…'" EnableIfNotExists="False" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="504,49.6" sap2010:WorkflowViewState.IdRef="NCheckState_4" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" Timeout="1" Version="V4">
                            <uix:NCheckState.IfExists>
                              <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="449.6,280" sap2010:WorkflowViewState.IdRef="Sequence_239">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Leave'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,218.4" sap2010:WorkflowViewState.IdRef="NClick_9" InteractionMode="HardwareEvents" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="329f03eb-fe68-46b2-b90a-97de11c5861f" Version="V4">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage.aspx" CVScreenId="99bab217-84e1-4b90-8558-3622898c7dc3" ContentHash="IBU8qBvZ_Uyu8XF3lXDLfQ" CvElementArea="345, 109, 71, 34" CvTextArea="363, 119, 33, 12" CvTextArgument="Leave" CvType="Button" DesignTimeRectangle="346, 110, 68, 32" ElementType="Button" FullSelectorArgument="&lt;ctrl name='Leave site?' role='dialog' /&gt;&lt;ctrl name='Leave' role='push button' /&gt;" Guid="dbac6776-1eac-48ab-9f8c-14e8ed842e03" InformativeScreenshot="9349b11cce94f888d7e36d52d3565461.png" Reference="SRHzbWhimEWn6FoI8hcZfg/-tILmMfqQUuxpCX-kCXbCQ" ScopeSelectorArgument="&lt;wnd app='msedge.exe' cls='Chrome_WidgetWin_1' title='Leave site?' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                </uix:NClick>
                              </Sequence>
                            </uix:NCheckState.IfExists>
                            <uix:NCheckState.IfNotExists>
                              <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="450,93" sap2010:WorkflowViewState.IdRef="Sequence_240">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </uix:NCheckState.IfNotExists>
                            <uix:NCheckState.Target>
                              <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage.aspx" ContentHash="rMHW-HZHGEKXcd6WoXTe3Q" DesignTimeRectangle="58, 33, 448, 125" FullSelectorArgument="&lt;ctrl name='Leave site?' role='dialog' /&gt;" Guid="70c7970b-93fc-4d88-a47b-03f88e8280e4" InformativeScreenshot="3c2064eeaa4f3aeb0dc78a31d608c9a4.png" Reference="SRHzbWhimEWn6FoI8hcZfg/TP687GCoCEuxsPvOfnBcZA" ScopeSelectorArgument="&lt;wnd app='msedge.exe' cls='Chrome_WidgetWin_1' title='Leave site?' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
                            </uix:NCheckState.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </uix:NCheckState>
                        </Sequence>
                      </ActivityAction>
                    </uix:NApplicationCard.Body>
                    <uix:NApplicationCard.TargetApp>
                      <uix:TargetApp Area="-830, -447, 830, 670" BrowserType="Edge" ContentHash="Pfwv2mUls0CKAZl1Gog8Yw" IconBase64="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAGmSURBVDhPjZI/SCNBFMZ/u/45iMgJgifoFSJYBS0E7Tw8i2s8RLA4rvEqEcRO1CsEFRtBBDkEwc6gXLKbRNSLuJ0gB4K9hZUgImqjRE2y7jyZQDQuifHHFDO8731882bAx/wgC91BevXeNDD99ZJsT7NzFub6S5A+fX63iZFdEJ4gIvvI1Qa3P7oYeS15B/Zvot4uXiaOl9rEG+9nHijXNYM30uQSWJPY4iC3f0ln4ijZQf4MsVZRxkddL3qlnIFOIHvInYX7YOOlojzKLrI+RqKmioZ8bXEDB0lGyKRjqAcbdW/halNnjsPGWoL+3ix+A50gFUXSMSQVRSUjuDrJ8QqnbU18ze8paZBNYfMoCcSZ5aSxloHcYAsb7L1c4V7PIYanm1dH+R+o5DtQp+dZ0MCafElwZ+G5myhvG5n5yb8ykx6gptQQbeUgN2HSagtJ2rjD3wgBnUB1weZ8dAL9kdQW6iJEsredRaDVgIBf+4rnrzyOJQfI8TKXHS1MAS2GwQe/viiJWRJHS5w31zMMfDYNKvyaN/nVw0hzPYPAJ9PwPVUBngDOiMjgta3rWAAAAABJRU5ErkJggg==" InformativeScreenshot="72e867e8cf0b9711bc44232701e00f6d.jpg" Reference="SRHzbWhimEWn6FoI8hcZfg/eTF9QfiF20iGXgqU8SNvXg" Selector="&lt;html app='msedge.exe' url='https://convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage*' /&gt;" Url="https://convergeaus.jacobs.com/PrologConverge/WebClient/SubmittalPackage*" Version="V2" />
                    </uix:NApplicationCard.TargetApp>
                  </uix:NApplicationCard>
                </Sequence>
              </uix:NCheckState.IfExists>
              <uix:NCheckState.IfNotExists>
                <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="449.6,228.8" sap2010:WorkflowViewState.IdRef="Sequence_87">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_16" Text="[&quot;Error, submittal did not open&quot;]" />
                  <ui:Break sap:VirtualizedContainerService.HintSize="416,49.6" sap2010:WorkflowViewState.IdRef="Break_3" />
                </Sequence>
              </uix:NCheckState.IfNotExists>
              <uix:NCheckState.Target>
                <uix:TargetAnchorable BrowserURL="convergeaus.jacobs.com/PrologConverge/WebClient/navigate.aspx" ContentHash="_moz8NWRLEGE86VocBDMnA" DesignTimeRectangle="8, 0, 813, 663" FuzzySelectorArgument="&lt;ctrl name='* Submittals - Microsoft Edge' role='pane' matching:name='fuzzy' fuzzylevel:name='0.0' /&gt;&lt;ctrl automationid='' role='pane' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' /&gt;" Guid="7680e8d3-1b34-4c6e-abf1-1bdb07ad89b4" ImageBase64="" InformativeScreenshot="5c853c39596c6cedf761f7f1f441d81a.png" Reference="2cLmJu5YmECa74LfIK_pQw/g5PL4kki_Eu8DvUWVJl4aA" ScopeSelectorArgument="&lt;wnd app='msedge.exe' cls='Chrome_WidgetWin_1' title='* Submittals - Work - Microsoft​ Edge' /&gt;" SearchSteps="FuzzySelector" Version="V6" Visibility="Interactive" WaitForReadyArgument="None" />
              </uix:NCheckState.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uix:NCheckState>
            <ui:IfElseIfV2 sap2010:Annotation.AnnotationText="Check if got merged with another SRC, highlight those rows" Condition="[Reviewer_comments.ToLower.Contains(&quot;merged&quot;)]" DisplayName="Update PnID status" sap:VirtualizedContainerService.HintSize="1112,4703.2" sap2010:WorkflowViewState.IdRef="IfElseIfV2_6">
              <ui:IfElseIfV2.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_190">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </ui:IfElseIfV2.Else>
              <ui:IfElseIfV2.ElseIfs>
                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
              </ui:IfElseIfV2.ElseIfs>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IfElseIfV2.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="772.8,4460.8" sap2010:WorkflowViewState.IdRef="Sequence_184">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Updates rows corresponding to SRC number in Excel " DisplayName="Excel Process Scope" FileConflictResolution="PromptUser" sap:VirtualizedContainerService.HintSize="739.2,4352.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3" LaunchMethod="Application" ProcessMode="ReuseIfExists">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Update Relevant Rows" sap:VirtualizedContainerService.HintSize="705.6,4203.2" sap2010:WorkflowViewState.IdRef="Sequence_191">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:List(x:String)" Name="Ranges" />
                            <Variable x:TypeArguments="x:Int32" Name="idx" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="672,4143.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" KeepExcelFileOpen="True" ResizeWindow="None" SensitivityOperation="None" TemplatePath="C:\Users\CHEWJ1\Documents\TWRP Overall P&amp;ID Tracker.xlsx" UseTemplate="True" WorkbookPath="[PnID_excel_file]">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="PnIDTracker" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="638.4,3827.2" sap2010:WorkflowViewState.IdRef="Sequence_223">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:CommentOut DisplayName="O(n2) method" sap:VirtualizedContainerService.HintSize="604.8,2564.8" sap2010:WorkflowViewState.IdRef="CommentOut_51">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="569.6,2454.4" sap2010:WorkflowViewState.IdRef="Sequence_205">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ExcelForEachRow DisplayName="For each row in the Excel file:" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="536,2394.4" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_7" Range="[PnIDtracker.Table(TableName_arg)]" SaveAfterEachRow="False">
                                          <ueab:ExcelForEachRow.Body>
                                            <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                              <ActivityAction.Argument1>
                                                <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                              </ActivityAction.Argument1>
                                              <ActivityAction.Argument2>
                                                <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                              </ActivityAction.Argument2>
                                              <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="502.4,2178.4" sap2010:WorkflowViewState.IdRef="Sequence_192">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="ExcelRowNo" />
                                                  <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence DisplayName="Check if it is not found in Prolog" sap:VirtualizedContainerService.HintSize="468.8,760" sap2010:WorkflowViewState.IdRef="Sequence_193">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:Int32" Name="lastColumnIndex" />
                                                    <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" sap:VirtualizedContainerService.HintSize="433.6,336" sap2010:WorkflowViewState.IdRef="If_32">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_20" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_200">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                  <Assign DisplayName="Get the last column index in Excel." sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_88">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[lastColumnIndex]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[Contract_Table.Columns.Count - 1]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign DisplayName="Read the cell value from the last column for each row in Excel." sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_89">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(lastColumnIndex).ToString()]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_90">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.Contains("Not found on Prolog"))]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                                <If sap2010:Annotation.AnnotationText="Skip row if not found on prolog" Condition="[Not_on_prologue = True]" DisplayName="Skip " sap:VirtualizedContainerService.HintSize="468.8,367.2" sap2010:WorkflowViewState.IdRef="If_33">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_21" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_202">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <Assign DisplayName="Get the SRC no. on prolog and current SRC number." sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_91">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ExcelRowNo]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[CurrentRow.ByField("SRC No. on Prolog").ToString()]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If sap2010:Annotation.AnnotationText="if row correspeonds to src number - update" Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" DisplayName="Update rows" sap:VirtualizedContainerService.HintSize="468.8,877.6" sap2010:WorkflowViewState.IdRef="If_34">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,627.2" sap2010:WorkflowViewState.IdRef="Sequence_203">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Revision on Prolog&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,192" sap2010:WorkflowViewState.IdRef="WriteCellX_29" Value="[LargestRevNumber]" />
                                                      <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Status&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,192" sap2010:WorkflowViewState.IdRef="WriteCellX_30" Value="[PnIDstatus]" />
                                                      <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Workflow Closed&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,183.2" sap2010:WorkflowViewState.IdRef="WriteCellX_31" Value="[workflow_closed_date]" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_204">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ActivityAction>
                                          </ueab:ExcelForEachRow.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ExcelForEachRow>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                  <ui:CommentOut sap2010:Annotation.AnnotationText="but too slow because it updates individual cells" DisplayName="O(n) method" sap:VirtualizedContainerService.HintSize="574.4,100.8" sap2010:WorkflowViewState.IdRef="CommentOut_52">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,25" sap2010:WorkflowViewState.IdRef="Sequence_212">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ExcelForEachRow DisplayName="For each row in the Excel file:" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="538,2326" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_8" Range="[PnIDTracker.Sheet(ContractName).Range(Col_letter_SRC+firstRowNumber.ToString + &quot;:&quot; + Col_letter_WorkflowClosed + &quot;137&quot;)]" SaveAfterEachRow="False">
                                          <ueab:ExcelForEachRow.Body>
                                            <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                              <ActivityAction.Argument1>
                                                <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                              </ActivityAction.Argument1>
                                              <ActivityAction.Argument2>
                                                <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                              </ActivityAction.Argument2>
                                              <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="504,2113" sap2010:WorkflowViewState.IdRef="Sequence_194">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="ExcelRowNo" />
                                                  <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence DisplayName="Check if it is not found in Prolog" sap:VirtualizedContainerService.HintSize="470,762" sap2010:WorkflowViewState.IdRef="Sequence_195">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:Int32" Name="lastColumnIndex" />
                                                    <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" sap:VirtualizedContainerService.HintSize="434,337" sap2010:WorkflowViewState.IdRef="If_35">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_206">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_22" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91" sap2010:WorkflowViewState.IdRef="Sequence_207">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                  <Assign DisplayName="Get the last column index in Excel." sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_92">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[lastColumnIndex]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[Contract_Table.Columns.Count - 1]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign DisplayName="Read the cell value from the last column for each row in Excel." sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_93">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(lastColumnIndex).ToString()]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.Contains("Not found on Prolog"))]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                                <If sap2010:Annotation.AnnotationText="Skip row if not found on prolog" Condition="[Not_on_prologue = True]" DisplayName="Skip " sap:VirtualizedContainerService.HintSize="470,302" sap2010:WorkflowViewState.IdRef="If_36">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_208">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_23" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_209">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <Assign DisplayName="Get the SRC no. on prolog and current SRC number." sap:VirtualizedContainerService.HintSize="470,114" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ExcelRowNo]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[CurrentRow.ByField("SRC No. on Prolog").ToString()]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If sap2010:Annotation.AnnotationText="if row correspeonds to src number - update" Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" DisplayName="Update rows" sap:VirtualizedContainerService.HintSize="470,875" sap2010:WorkflowViewState.IdRef="If_37">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,624" sap2010:WorkflowViewState.IdRef="Sequence_210">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Revision on Prolog&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_32" Value="[LargestRevNumber]" />
                                                      <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Status&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_33" Value="[PnIDstatus]" />
                                                      <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Workflow Closed&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_34" Value="[workflow_closed_date]" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,91" sap2010:WorkflowViewState.IdRef="Sequence_211">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ActivityAction>
                                          </ueab:ExcelForEachRow.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ExcelForEachRow>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                  <Sequence sap2010:Annotation.AnnotationText="using ranges and for each row" DisplayName="O(n) method" sap:VirtualizedContainerService.HintSize="574.4,1053.6" sap2010:WorkflowViewState.IdRef="Sequence_219">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="ranges = New List(Of String)()&#xA;&#xA;If rowNumbers Is Nothing OrElse rowNumbers.Count = 0 Then&#xA;    Return&#xA;End If&#xA;&#xA;&#xA;Dim startRow As Integer = rowNumbers(0)&#xA;Dim prevRow As Integer = rowNumbers(0)&#xA;&#xA;For i As Integer = 1 To rowNumbers.Count - 1&#xA;    If rowNumbers(i) = prevRow + 1 Then&#xA;        prevRow = rowNumbers(i)&#xA;    Else&#xA;&#x9;&#x9;startRow += firstrow-1 'offset for the table not being on the first row&#xA;&#x9;&#x9;prevRow += firstrow-1&#xA;        ranges.Add(&quot;A&quot; &amp; startRow.ToString() &amp; &quot;:&quot; &amp; Col_letter_WorkflowClosed &amp; prevRow.ToString())&#xA;        startRow = rowNumbers(i)&#xA;        prevRow = rowNumbers(i)&#xA;    End If&#xA;Next&#xA;&#xA;' Add the final range&#xA;startRow += firstrow-1 'offset for the table not being on the first row&#xA;prevRow += firstrow-1&#xA;ranges.Add(&quot;A&quot; &amp; startRow.ToString()  &amp; &quot;:&quot; &amp; Col_letter_WorkflowClosed &amp; prevRow.ToString)&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="540.8,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
                                      <ui:InvokeCode.Arguments>
                                        <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="rowNumbers">[SrcRowNumbers(CurrentSrcNumber)]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="Col_letter_Revision">[Col_letter_Revision]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="Col_letter_WorkflowClosed">[Col_letter_WorkflowClosed]</InArgument>
                                        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="ranges">[Ranges]</OutArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="firstrow">[firstRowNumber]</InArgument>
                                      </ui:InvokeCode.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeCode>
                                    <ui:CommentOut DisplayName="Print out ranges" sap:VirtualizedContainerService.HintSize="540.8,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_53">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,168" sap2010:WorkflowViewState.IdRef="Sequence_213">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="MessageBox_27" Text="[String.Join(&quot;, &quot;, Ranges)]" />
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each currentRange" sap:VirtualizedContainerService.HintSize="540.8,676.8" sap2010:WorkflowViewState.IdRef="ForEach`1_19" Values="[Ranges]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="currentRange" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="539.2,555.2" sap2010:WorkflowViewState.IdRef="Sequence_218">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Process" HasHeaders="False" sap:VirtualizedContainerService.HintSize="505.6,447.2" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_3" Range="[PnIDTracker.Sheet(ContractName).Range(currentRange)]" SaveAfterEachRow="False">
                                              <ueab:ExcelForEachRowX.Body>
                                                <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                                  <ActivityAction.Argument1>
                                                    <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                                  </ActivityAction.Argument1>
                                                  <ActivityAction.Argument2>
                                                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                                  </ActivityAction.Argument2>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="472,222.4" sap2010:WorkflowViewState.IdRef="Sequence_216">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="438.4,162.4" sap2010:WorkflowViewState.IdRef="FormatRangeX_6" Range="[CurrentRow]">
                                                      <ueab:FormatRangeX.Alignment>
                                                        <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                                      </ueab:FormatRangeX.Alignment>
                                                      <ueab:FormatRangeX.Font>
                                                        <ui:FontOptions Color="Black" FillColor="Red" FontFamilyName="Calibri" Size="10" Style="Regular" UnderlineStyle="None" />
                                                      </ueab:FormatRangeX.Font>
                                                      <ueab:FormatRangeX.Format>
                                                        <ueab:GeneralFormat />
                                                      </ueab:FormatRangeX.Format>
                                                    </ueab:FormatRangeX>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ueab:ExcelForEachRowX.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ExcelForEachRowX>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="505.6,48" sap2010:WorkflowViewState.IdRef="CommentOut_54">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="473,221" sap2010:WorkflowViewState.IdRef="Sequence_217">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ueab:FormatRangeX DisplayName="Highlight cell B1 in the sheet named &quot;C4A&quot;." sap:VirtualizedContainerService.HintSize="439,161" sap2010:WorkflowViewState.IdRef="FormatRangeX_5" Range="[PnIDTracker.Sheet(ContractName).Range(currentRange)]">
                                                    <ueab:FormatRangeX.Alignment>
                                                      <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                                    </ueab:FormatRangeX.Alignment>
                                                    <ueab:FormatRangeX.Font>
                                                      <ui:FontOptions Color="Black" FillColor="Orange" FontFamilyName="Calibri" Size="10" Style="Regular" UnderlineStyle="None" />
                                                    </ueab:FormatRangeX.Font>
                                                    <ueab:FormatRangeX.Format>
                                                      <ueab:GeneralFormat />
                                                    </ueab:FormatRangeX.Format>
                                                  </ueab:FormatRangeX>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                  </Sequence>
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="574.4,48" sap2010:WorkflowViewState.IdRef="CommentOut_55">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="548,1897" sap2010:WorkflowViewState.IdRef="Sequence_222">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Write to cell individually but very slow" DisplayName="O(n) approach" sap:VirtualizedContainerService.HintSize="514,1837" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[SrcRowNumbers(CurrentSrcNumber)]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:Int32">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:Int32" Name="currentRow" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="512,1685" sap2010:WorkflowViewState.IdRef="Sequence_197">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="absolute_rownum" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="478,114" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[absolute_rownum]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[(currentRow + firstRowNumber - 1).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Sequence sap2010:Annotation.AnnotationText="Checks remarks section if submittal is found on prolog " DisplayName="Check if on prolog" sap:VirtualizedContainerService.HintSize="478,756" sap2010:WorkflowViewState.IdRef="Sequence_198">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                                    <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ueab:ReadCellValueX Cell="[PnIDTracker.Sheet(ContractName).Cell( lastColumn_letter +absolute_rownum)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_5">
                                                    <ueab:ReadCellValueX.SaveTo>
                                                      <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                                    </ueab:ReadCellValueX.SaveTo>
                                                  </ueab:ReadCellValueX>
                                                  <Assign sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_98">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.toLower.Contains("Not found on Prolog"))]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <If Condition="[Not_on_prologue]" sap:VirtualizedContainerService.HintSize="444,328" sap2010:WorkflowViewState.IdRef="If_38">
                                                    <If.Then>
                                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_220">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_24" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91" sap2010:WorkflowViewState.IdRef="Sequence_221">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                                <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_Revision + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="WriteCellX_38" Value="[LargestRevNumber]" />
                                                <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_Status + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="WriteCellX_39" Value="[PnIDstatus]" />
                                                <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_WorkflowClosed + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="WriteCellX_40" Value="[workflow_closed_date]" />
                                                <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_SRC + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,182" sap2010:WorkflowViewState.IdRef="WriteCellX_41" Value="[CurrentSrcNumber]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ForEach>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                  <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_25" />
                </Sequence>
              </ui:IfElseIfV2.Then>
            </ui:IfElseIfV2>
            <Assign sap:VirtualizedContainerService.HintSize="1112,113.6" sap2010:WorkflowViewState.IdRef="Assign_76">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[SRC_IsUpdated]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[String.Equals(LargestRevNumber, Src_MRU_revision(CurrentSrcNumber)(0)) AndAlso String.Equals(PnIDStatus, Src_MRU_revision(CurrentSrcNumber)(1)) AndAlso NewPnIDsHash.Count = 0]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1112,318.4" sap2010:WorkflowViewState.IdRef="CommentOut_48">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,168" sap2010:WorkflowViewState.IdRef="Sequence_173">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="MessageBox_25" Text="[SRC_IsUpdated.ToString]" />
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <If sap2010:Annotation.AnnotationText="Skips the number if it is already the most updated" Condition="[SRC_IsUpdated]" DisplayName="Skip Number if already most updated" sap:VirtualizedContainerService.HintSize="1112,302.4" sap2010:WorkflowViewState.IdRef="If_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_169">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_17" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_170">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[UpdatedSRCNumbers]" DisplayName="Append Items to Collection" sap:VirtualizedContainerService.HintSize="1112,177.33333333333334" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_1">
              <uasc:AppendItemToCollection.Items>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String">[CurrentSrcNumber]</InArgument>
                </scg:List>
              </uasc:AppendItemToCollection.Items>
            </uasc:AppendItemToCollection>
            <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Updates rows corresponding to SRC number in Excel " DisplayName="Excel Process Scope" FileConflictResolution="PromptUser" sap:VirtualizedContainerService.HintSize="1112,3431.3333333333335" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" LaunchMethod="Application" ProcessMode="ReuseIfExists">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Update Relevant Rows" sap:VirtualizedContainerService.HintSize="690,3290.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_94">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:List(x:String)" Name="Ranges" />
                      <Variable x:TypeArguments="x:Int32" Name="idx" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="656,3230.6666666666665" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" KeepExcelFileOpen="True" ResizeWindow="None" SensitivityOperation="None" TemplatePath="C:\Users\CHEWJ1\Documents\TWRP Overall P&amp;ID Tracker.xlsx" UseTemplate="True" WorkbookPath="[PnID_excel_file]">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="PnIDTracker" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="622,2864.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_93">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut DisplayName="O(n2) method" sap:VirtualizedContainerService.HintSize="588,57" sap2010:WorkflowViewState.IdRef="CommentOut_37">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="572,2386" sap2010:WorkflowViewState.IdRef="Sequence_155">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:ExcelForEachRow DisplayName="For each row in the Excel file:" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="538,2326" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_6" Range="[PnIDtracker.Table(TableName_arg)]" SaveAfterEachRow="False">
                                    <ueab:ExcelForEachRow.Body>
                                      <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                        <ActivityAction.Argument1>
                                          <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                        </ActivityAction.Argument1>
                                        <ActivityAction.Argument2>
                                          <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                        </ActivityAction.Argument2>
                                        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="504,2113" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="ExcelRowNo" />
                                            <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Check if it is not found in Prolog" sap:VirtualizedContainerService.HintSize="470,762" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:Int32" Name="lastColumnIndex" />
                                              <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" sap:VirtualizedContainerService.HintSize="434,337" sap2010:WorkflowViewState.IdRef="If_18">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_10" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign DisplayName="Get the last column index in Excel." sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_36">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[lastColumnIndex]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Contract_Table.Columns.Count - 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Read the cell value from the last column for each row in Excel." sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_37">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(lastColumnIndex).ToString()]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_38">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.Contains("Not found on Prolog"))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                          <If sap2010:Annotation.AnnotationText="Skip row if not found on prolog" Condition="[Not_on_prologue = True]" DisplayName="Skip " sap:VirtualizedContainerService.HintSize="470,302" sap2010:WorkflowViewState.IdRef="If_14">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_9" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign DisplayName="Get the SRC no. on prolog and current SRC number." sap:VirtualizedContainerService.HintSize="470,114" sap2010:WorkflowViewState.IdRef="Assign_39">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ExcelRowNo]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CurrentRow.ByField("SRC No. on Prolog").ToString()]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If sap2010:Annotation.AnnotationText="if row correspeonds to src number - update" Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" DisplayName="Update rows" sap:VirtualizedContainerService.HintSize="470,875" sap2010:WorkflowViewState.IdRef="If_15">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,624" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Revision on Prolog&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[LargestRevNumber]" />
                                                <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Status&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[PnIDstatus]" />
                                                <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Workflow Closed&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[workflow_closed_date]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,91" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ueab:ExcelForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:ExcelForEachRow>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <ui:CommentOut sap2010:Annotation.AnnotationText="but too slow because it updates individual cells" DisplayName="O(n) method" sap:VirtualizedContainerService.HintSize="588,99" sap2010:WorkflowViewState.IdRef="CommentOut_28">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,25" sap2010:WorkflowViewState.IdRef="Sequence_139">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:ExcelForEachRow DisplayName="For each row in the Excel file:" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="538,2326" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_5" Range="[PnIDTracker.Sheet(ContractName).Range(Col_letter_SRC+firstRowNumber.ToString + &quot;:&quot; + Col_letter_WorkflowClosed + &quot;137&quot;)]" SaveAfterEachRow="False">
                                    <ueab:ExcelForEachRow.Body>
                                      <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                        <ActivityAction.Argument1>
                                          <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                        </ActivityAction.Argument1>
                                        <ActivityAction.Argument2>
                                          <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                        </ActivityAction.Argument2>
                                        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="504,2113" sap2010:WorkflowViewState.IdRef="Sequence_131">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="ExcelRowNo" />
                                            <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Check if it is not found in Prolog" sap:VirtualizedContainerService.HintSize="470,762" sap2010:WorkflowViewState.IdRef="Sequence_132">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:Int32" Name="lastColumnIndex" />
                                              <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" sap:VirtualizedContainerService.HintSize="434,337" sap2010:WorkflowViewState.IdRef="If_22">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_133">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_14" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91" sap2010:WorkflowViewState.IdRef="Sequence_134">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign DisplayName="Get the last column index in Excel." sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_66">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[lastColumnIndex]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Contract_Table.Columns.Count - 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Read the cell value from the last column for each row in Excel." sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_67">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(lastColumnIndex).ToString()]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_68">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.Contains("Not found on Prolog"))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                          <If sap2010:Annotation.AnnotationText="Skip row if not found on prolog" Condition="[Not_on_prologue = True]" DisplayName="Skip " sap:VirtualizedContainerService.HintSize="470,302" sap2010:WorkflowViewState.IdRef="If_23">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_15" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_136">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign DisplayName="Get the SRC no. on prolog and current SRC number." sap:VirtualizedContainerService.HintSize="470,114" sap2010:WorkflowViewState.IdRef="Assign_69">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ExcelRowNo]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CurrentRow.ByField("SRC No. on Prolog").ToString()]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If sap2010:Annotation.AnnotationText="if row correspeonds to src number - update" Condition="[Equals(CurrentSrcNumber, ExcelRowNo)]" DisplayName="Update rows" sap:VirtualizedContainerService.HintSize="470,875" sap2010:WorkflowViewState.IdRef="If_24">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,624" sap2010:WorkflowViewState.IdRef="Sequence_137">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Revision on Prolog&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_19" Value="[LargestRevNumber]" />
                                                <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Status&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_20" Value="[PnIDstatus]" />
                                                <ueab:WriteCellX Cell="[CurrentRow.ByField(&quot;Workflow Closed&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_21" Value="[workflow_closed_date]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,91" sap2010:WorkflowViewState.IdRef="Sequence_138">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ueab:ExcelForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:ExcelForEachRow>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Sequence sap2010:Annotation.AnnotationText="using ranges and for each row" DisplayName="O(n) method" sap:VirtualizedContainerService.HintSize="588,2600.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_156">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="ranges = New List(Of String)()&#xA;&#xA;If rowNumbers Is Nothing OrElse rowNumbers.Count = 0 Then&#xA;    Return&#xA;End If&#xA;&#xA;&#xA;Dim startRow As Integer = rowNumbers(0)&#xA;Dim prevRow As Integer = rowNumbers(0)&#xA;&#xA;For i As Integer = 1 To rowNumbers.Count - 1&#xA;    If rowNumbers(i) = prevRow + 1 Then&#xA;        prevRow = rowNumbers(i)&#xA;    Else&#xA;&#x9;&#x9;startRow += firstrow-1 'offset for the table not being on the first row&#xA;&#x9;&#x9;prevRow += firstrow-1&#xA;        ranges.Add(Col_letter_Revision &amp; startRow.ToString() &amp; &quot;:&quot; &amp; Col_letter_WorkflowClosed &amp; prevRow.ToString())&#xA;        startRow = rowNumbers(i)&#xA;        prevRow = rowNumbers(i)&#xA;    End If&#xA;Next&#xA;&#xA;' Add the final range&#xA;startRow += firstrow-1 'offset for the table not being on the first row&#xA;prevRow += firstrow-1&#xA;ranges.Add(Col_letter_Revision &amp; startRow.ToString() &amp; &quot;:&quot; &amp; Col_letter_WorkflowClosed &amp; prevRow.ToString)&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="554,197" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                                <ui:InvokeCode.Arguments>
                                  <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="rowNumbers">[SrcRowNumbers(CurrentSrcNumber)]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Col_letter_Revision">[Col_letter_Revision]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Col_letter_WorkflowClosed">[Col_letter_WorkflowClosed]</InArgument>
                                  <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="ranges">[Ranges]</OutArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="firstrow">[firstRowNumber]</InArgument>
                                </ui:InvokeCode.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeCode>
                              <ui:CommentOut DisplayName="Print out ranges" sap:VirtualizedContainerService.HintSize="554,57" sap2010:WorkflowViewState.IdRef="CommentOut_39">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,168" sap2010:WorkflowViewState.IdRef="Sequence_159">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="MessageBox_21" Text="[String.Join(&quot;, &quot;, Ranges)]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each currentRange" sap:VirtualizedContainerService.HintSize="554,2223.3333333333335" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[Ranges]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="currentRange" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,2100.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="newEntriesRange" />
                                        <Variable x:TypeArguments="scg:List(scg:KeyValuePair(x:String, x:String))" Name="newPnIDs_sorted" />
                                        <Variable x:TypeArguments="x:Int32" Name="newidx" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Process" HasHeaders="False" sap:VirtualizedContainerService.HintSize="518,934" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_2" Range="[PnIDTracker.Sheet(ContractName).Range(currentRange)]" SaveAfterEachRow="False">
                                        <ueab:ExcelForEachRowX.Body>
                                          <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                            <ActivityAction.Argument1>
                                              <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                            </ActivityAction.Argument1>
                                            <ActivityAction.Argument2>
                                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                            </ActivityAction.Argument2>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="Sequence_158">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Sequence sap2010:Annotation.AnnotationText="Checks remarks section if submittal is found on prolog " DisplayName="Check if on prolog" sap:VirtualizedContainerService.HintSize="449.6,88" sap2010:WorkflowViewState.IdRef="Sequence_161">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                                  <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ueab:ReadCellValueX Cell="[CurrentRow.ByIndex(5)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="443.2,192" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                                                  <ueab:ReadCellValueX.SaveTo>
                                                    <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                                  </ueab:ReadCellValueX.SaveTo>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ueab:ReadCellValueX>
                                                <Assign sap:VirtualizedContainerService.HintSize="443.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.toLower.Contains("not found on prolog"))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[Not_on_prologue]" sap:VirtualizedContainerService.HintSize="443.2,327.2" sap2010:WorkflowViewState.IdRef="If_25">
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_16" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(0)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="450,191" sap2010:WorkflowViewState.IdRef="WriteCellX_26" Value="[LargestRevNumber]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(Col_idx_Status-Col_idx_Revision)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="450,191" sap2010:WorkflowViewState.IdRef="WriteCellX_27" Value="[PnIDstatus]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(Col_idx_WorkflowClosed-Col_idx_Revision)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="450,182" sap2010:WorkflowViewState.IdRef="WriteCellX_28" Value="[workflow_closed_date]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ueab:ExcelForEachRowX.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:ExcelForEachRowX>
                                      <If Condition="[newPnIDsHash.Count = 0]" sap:VirtualizedContainerService.HintSize="518,271" sap2010:WorkflowViewState.IdRef="If_40">
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_234">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:Continue sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_27" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_233">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="516.8,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_46">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="473,221" sap2010:WorkflowViewState.IdRef="Sequence_171">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:FormatRangeX DisplayName="Highlight cell B1 in the sheet named &quot;C4A&quot;." sap:VirtualizedContainerService.HintSize="439,161" sap2010:WorkflowViewState.IdRef="FormatRangeX_1" Range="[PnIDTracker.Sheet(ContractName).Range(currentRange)]">
                                              <ueab:FormatRangeX.Alignment>
                                                <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                              </ueab:FormatRangeX.Alignment>
                                              <ueab:FormatRangeX.Font>
                                                <ui:FontOptions Color="Black" FillColor="Orange" FontFamilyName="Calibri" Size="10" Style="Regular" UnderlineStyle="None" />
                                              </ueab:FormatRangeX.Font>
                                              <ueab:FormatRangeX.Format>
                                                <ueab:GeneralFormat />
                                              </ueab:FormatRangeX.Format>
                                            </ueab:FormatRangeX>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ueab:InsertRowsX DisplayName="Insert Rows" HasHeaders="False" sap:VirtualizedContainerService.HintSize="518,218" sap2010:WorkflowViewState.IdRef="InsertRowsX_1" InsertPosition="Specific" NbOfRows="[NewPnIDsHash.Count]" Range="[PnIDTracker.Sheet(ContractName)]" SpecificIndex="[SrcRowNumbers(CurrentSrcNumber).Max + firstRowNumber]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="518,114" sap2010:WorkflowViewState.IdRef="Assign_104">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[newEntriesRange]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["A" + (SrcRowNumbers(CurrentSrcNumber).Max + firstRowNumber).ToString +":" + Col_letter_WorkflowClosed + (firstRowNumber -1 + SrcRowNumbers(CurrentSrcNumber).Max + NewPnIDsHash.Count).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="518,114" sap2010:WorkflowViewState.IdRef="Assign_105">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:List(scg:KeyValuePair(x:String, x:String))">[newPnIDs_sorted]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:List(scg:KeyValuePair(x:String, x:String))">[NewPnIDsHash.OrderBy(Function(x) x.Key).ToList()]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="518,114" sap2010:WorkflowViewState.IdRef="Assign_107">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[newidx]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Process" HasHeaders="False" sap:VirtualizedContainerService.HintSize="516.8,56.8" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_4" Range="[PnIDTracker.Sheet(ContractName).Range(newEntriesRange)]" SaveAfterEachRow="False">
                                        <ueab:ExcelForEachRowX.Body>
                                          <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                            <ActivityAction.Argument1>
                                              <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                            </ActivityAction.Argument1>
                                            <ActivityAction.Argument2>
                                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                            </ActivityAction.Argument2>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="468,1677" sap2010:WorkflowViewState.IdRef="Sequence_231">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(0)]" DisplayName="Write Cell for Sheet Number" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_42" Value="[SrcRowNumbers(CurrentSrcNumber).Max + 1 +newidx]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(1)]" DisplayName="Write Cell for Sheet Number" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_48" Value="[newPnIDs_sorted(newidx).Key]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(2)]" DisplayName="Write Cell for Sheet Number" sap:VirtualizedContainerService.HintSize="433.6,192" sap2010:WorkflowViewState.IdRef="WriteCellX_47" Value="[newPnIDs_sorted(newidx).Value]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(Col_idx_SRC-1)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_45" Value="[CurrentSrcNumber]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(Col_idx_Revision-1)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_46" Value="[LargestRevNumber]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(Col_idx_Status-1)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_43" Value="[PnIDstatus]" />
                                              <ueab:WriteCellX Cell="[CurrentRow.ByIndex(Col_idx_WorkflowClosed-1)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_44" Value="[workflow_closed_date]" />
                                              <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[set_SheetNo(CurrentSrcNumber)]" DisplayName="Append Items to Collection" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_2">
                                                <uasc:AppendItemToCollection.Items>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String">[newPnIDs_sorted(idx).Key]</InArgument>
                                                  </scg:List>
                                                </uasc:AppendItemToCollection.Items>
                                              </uasc:AppendItemToCollection>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_109">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[newidx]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[newidx+1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ActivityAction>
                                        </ueab:ExcelForEachRowX.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:ExcelForEachRowX>
                                      <Sequence sap2010:Annotation.AnnotationText="Ensures that after inserting rows, the src row dictionary gets updated" DisplayName="Update dictionary of row numbers" sap:VirtualizedContainerService.HintSize="516.8,162.4" sap2010:WorkflowViewState.IdRef="Sequence_242">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each current_SRC" sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="ForEach`1_23" Values="[SrcRowNumbers.Keys.ToList()]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:String">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="current_SRC" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="537.6,560.8" sap2010:WorkflowViewState.IdRef="Sequence_243">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:Int32" Name="curr_idx" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each currentidx" sap:VirtualizedContainerService.HintSize="504,500.8" sap2010:WorkflowViewState.IdRef="ForEach`1_24" Values="[Enumerable.Range(0, SrcRowNumbers(current_SRC).Count)]">
                                                  <ui:ForEach.Body>
                                                    <ActivityAction x:TypeArguments="x:Int32">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="currentidx" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,379.2" sap2010:WorkflowViewState.IdRef="Sequence_244">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If Condition="[SrcRowNumbers(current_SRC)(currentidx) &gt; SrcRowNumbers(CurrentSrcNumber).Max]" DisplayName="If row got incremented" sap:VirtualizedContainerService.HintSize="468.8,319.2" sap2010:WorkflowViewState.IdRef="If_42">
                                                          <If.Then>
                                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_245">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_111">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">[SrcRowNumbers(current_SRC)(currentidx)]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">[SrcRowNumbers(current_SRC)(currentidx) + NewPnIDsHash.Count]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,24.8" sap2010:WorkflowViewState.IdRef="Sequence_246">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ForEach.Body>
                                                </ui:ForEach>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ForEach>
                                      </Sequence>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                            </Sequence>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="588,48" sap2010:WorkflowViewState.IdRef="CommentOut_32">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="548,1897" sap2010:WorkflowViewState.IdRef="Sequence_148">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Write to cell individually but very slow" DisplayName="O(n) approach" sap:VirtualizedContainerService.HintSize="514,1837" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[SrcRowNumbers(CurrentSrcNumber)]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Int32">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Int32" Name="currentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="512,1685" sap2010:WorkflowViewState.IdRef="Sequence_122">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="absolute_rownum" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="478,114" sap2010:WorkflowViewState.IdRef="Assign_64">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[absolute_rownum]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[(currentRow + firstRowNumber - 1).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Sequence sap2010:Annotation.AnnotationText="Checks remarks section if submittal is found on prolog " DisplayName="Check if on prolog" sap:VirtualizedContainerService.HintSize="478,756" sap2010:WorkflowViewState.IdRef="Sequence_123">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="lastColumnValue" />
                                              <Variable x:TypeArguments="x:Boolean" Name="Not_on_prologue" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadCellValueX Cell="[PnIDTracker.Sheet(ContractName).Cell( lastColumn_letter +absolute_rownum)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                                              <ueab:ReadCellValueX.SaveTo>
                                                <OutArgument x:TypeArguments="x:String">[lastColumnValue]</OutArgument>
                                              </ueab:ReadCellValueX.SaveTo>
                                            </ueab:ReadCellValueX>
                                            <Assign sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_65">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[Not_on_prologue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">[If(String.IsNullOrEmpty(lastColumnValue), False, lastColumnValue.toLower.Contains("Not found on Prolog"))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <If Condition="[Not_on_prologue]" sap:VirtualizedContainerService.HintSize="444,328" sap2010:WorkflowViewState.IdRef="If_20">
                                              <If.Then>
                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_124">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_12" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91" sap2010:WorkflowViewState.IdRef="Sequence_125">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                          <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_Revision + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="WriteCellX_15" Value="[LargestRevNumber]" />
                                          <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_Status + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="WriteCellX_16" Value="[PnIDstatus]" />
                                          <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_WorkflowClosed + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,191" sap2010:WorkflowViewState.IdRef="WriteCellX_17" Value="[workflow_closed_date]" />
                                          <ueab:WriteCellX Cell="[PnIDTracker.Sheet(ContractName).Cell( Col_letter_SRC + absolute_rownum)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="478,182" sap2010:WorkflowViewState.IdRef="WriteCellX_18" Value="[CurrentSrcNumber]" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelProcessScopeX>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <Assign sap:VirtualizedContainerService.HintSize="1148,108" sap2010:WorkflowViewState.IdRef="Assign_110">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[AutomationProgressInfo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[If(UpdatedSRCNumbers Is Nothing OrElse UpdatedSRCNumbers.Count = 0, "Existing P&amp;IDs in Excel all updated." &amp;vbNewLine, "Updated SRC Numbers: " &amp; String.Join(",", UpdatedSRCNumbers) &amp; vbNewLine)]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>